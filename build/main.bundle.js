var main=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/build/",n(n.s=26)}([function(e,t){e.exports=d3},function(e,t){e.exports=_},function(e,t){e.exports=lodash},function(e,t,n){"use strict";var r=/*@cc_on!@*/Boolean(document.documentMode)||Boolean(window.StyleMedia);t.nonNull=function(e){if(null==e)throw new Error("expected a non-null defined value, but got: "+String(e));return e},t.coalesce=function(e,t){return null!=e?e:t},t.applyMaybe=function(e,t){return null!=t?e(t):t},t.getFirst=function(e,t){for(var n=0;n<t.length;++n){var r=e(t[n]);if(null!=r)return r}},t.toDocFragment=function(e){var t=document.createDocumentFragment();return e.forEach(t.appendChild.bind(t)),t},t.isBrowserIEorEdge=r},function(e,t){e.exports=jQuery},function(e,t,n){"use strict";function r(e,t,n){var r=Object.getOwnPropertyDescriptor(e,t);if(void 0===r)throw new TypeError("Cannot watch nonexistent property '"+t+"'");if(!r.configurable)throw new TypeError("Cannot watch non-configurable property '"+t+"'");if(r.writable||void 0!==r.set){var o=function(){if(r.set)return{get:r.get,set:function(o){return r.set.call(e,n.call(e,t,e[t],o))}};var o=r.value;return{get:function(){return o},set:function(r){return o=n.call(e,t,o,r)}}}();return Object.defineProperty(e,t,o),r}}t.watch=r,t.watchInit=function(e,t,n){var o=e[t],a=r(e,t,n);return a&&(e[t]=o),a}},function(e,t,n){"use strict";var r=n(19),o=n(1),a={name:"name",sourceCode:"source code",positionTable:"positions",editorSourceCode:"editor contents"},i=o.invert(a);function s(e){return function(t){var n={};return null!=t&&Object.keys(e).forEach((function(r){var o=e[r];n[o]=t[r]})),n}}var c=o.flow(s(a),o.omitBy((function(e){return null==e})),o.update("positions",o.mapValues((function(e){return e.fixed?{x:e.x,y:e.y}:{x:e.x,y:e.y,fixed:!1}}))),o.partialRight(r.safeDump,[{flowLevel:2,lineWidth:-1,noRefs:!0,noCompatMode:!0}])),l=o.flow(r.safeLoad,o.update("positions",o.mapValues((function(e){return o.defaults({px:e.x,py:e.y,fixed:!0},e)}))),s(i),(function(e){if(null==e||null==e.sourceCode)throw new u("The “source code:” value is missing");if(!o.isString(e.sourceCode))throw new u("The “source code:” value needs to be of type string");return e}));function u(e){this.name="InvalidDocumentError",this.message=e||"Invalid document",this.stack=(new Error).stack}u.prototype=Object.create(Error.prototype),u.prototype.constructor=u,t.stringifyDocument=c,t.parseDocument=l,t.InvalidDocumentError=u,t.YAMLException=r.YAMLException},function(e,t,n){"use strict";const r=n(8).TuringMachine,o=n(9),a=n(12),i=n(13),s=n(5).watchInit,c=n(0);function l(e,t=250){return c.select(e.domNode).classed("active-edge",!0).transition().duration(t/2).style("stroke-width","3px").transition().duration(t/2).style("stroke-width","1px").transition().duration(0).each("start",(function(){c.select(this).classed("active-edge",!1)})).style("stroke",null).style("stroke-width",null)}function u(e,t){0===t.tapes&&"string"==typeof t.input&&(t.input=[t.input]);let n=0===t.tapes?1:t.tapes,r=[];for(let o=0;o<n;o++)r.push(d(e,t,o));return r}function d(e,t,n){return new o(e.append("svg").attr("class","tm-tape"),9,t.blank,t.input&&t.input[n]?String(t.input[n]).split(""):[],t.vis[n])}function p(e,t,n){e=c.select(e);let o=new a(t.table,t.vis.colors);this.stateviz=new i(e,o.getVertexMap(),o.getEdges()),null!=n&&(this.positionTable=n),this.titles=t.titles,this.info=t.info,this.edgeAnimation=l,this.stepInterval=50,this.animationDuration=500;const d=this;this.machine=new r(function(e,t){return function(n,r){let o=e.getInstructionAndEdge(n,r);return null==o?null:(t(o.edge),o.instruction)}}(o,(function(e){let t=d.edgeAnimation(e,d.animationDuration);d.isRunning&&t.transition().duration(d.stepInterval).each("end",(function(){d.isRunning&&d.step(d.animationDuration)}))})),t.startState,u(e,t)),s(this.machine,"state",(function(e,t,n){return c.select(o.getVertex(t).domNode).classed("current-state",!1),c.select(o.getVertex(n).domNode).classed("current-state",!0),n})),this.isHalted=!1;let p=!1;Object.defineProperty(this,"isRunning",{configurable:!0,get:function(){return p},set:function(e){p!==e&&(p=e,p&&this.step())}}),this.__parentDiv=e,this.__spec=t}p.prototype.step=function(e){this.machine.step(e)||(this.isRunning=!1,this.isHalted=!0)},p.prototype.reset=function(){this.isRunning=!1,this.isHalted=!1,this.machine.state=this.__spec.startState;for(const e of this.machine.tapes)e.domNode.remove();this.machine.tapes=u(this.__parentDiv,this.__spec)},Object.defineProperty(p.prototype,"positionTable",{get:function(){return this.stateviz.positionTable},set:function(e){this.stateviz.positionTable=e}}),e.exports=p},function(e,t,n){"use strict";function r(e,t,n){this.transition=e,this.state=t,this.tapes=n}function o(e,t,n){switch(t){case"R":e.headRight(n);break;case"L":e.headLeft(n);break;case"H":break;default:throw new TypeError("not a valid tape movement: "+String(t))}}r.prototype.toString=function(){return String(this.state)+"\n"+this.tapes.map(String).join("\n")},r.prototype.step=function(e){let t=this.nextInstruction;if(null==t)return!1;for(let n=0;n<this.tapes.length;n++)this.tapes[n].write(t.symbol[n],e),o(this.tapes[n],t.move[n],e);for(let e=0;e<this.tapes.length;e++)this.tapes[e].visualize(t.state,this.state===t.state);return this.state=t.state,!0},Object.defineProperties(r.prototype,{nextInstruction:{get:function(){return this.transition(this.state,this.tapes.reduce((e,t)=>e+t.read(),""))},enumerable:!0},isHalted:{get:function(){return null==this.nextInstruction},enumerable:!0}}),t.TuringMachine=r},function(e,t,n){"use strict";const r=n(10),o=n(0);n(11);function a(e){return e.attr("class","tape-cell"),e.append("rect").datum(null).attr({width:50,height:50}),e.append("text").text((function(e){return e})).attr({x:25,y:33}),e}function i(e,t){return t=null==t?0:t,e.attr("transform",(function(e,n){return"translate("+(50*(n+t)-40)+")"})),e}function s(e){e.attr("transform","translate(0 10)").transition().duration(0).select(".exiting").remove()}function c(e,t,n,o,c){r.call(this,n,o),this.vis=c,Object.defineProperty(this,"lookaround",{value:t,writable:!1,enumerable:!0}),Object.defineProperty(this,"domNode",{value:e,writable:!1,enumerable:!0});var l=50*(t+1+t-2)+20,u=70;e.attr({width:"95%",viewBox:[0,0,l,u].join(" ")}),this.wrapper=e.append("g").attr("class","wrapper").call(s),e.append("rect").attr({id:"tape-head",width:60,height:60,x:50*t-45,y:5}),this.wrapper.selectAll(".tape-cell").data(this.readRange(-t,t)).enter().append("g").call(a).call(i)}function l(e,t,n,r,o,c=250){t.call(a),n.classed("exiting",!0),e.selectAll(".tape-cell").call(i,o),e.attr("transform","translate("+(50*r).toString()+" 10)").transition().duration(c).call(s)}c.prototype=Object.create(r.prototype),c.prototype.constructor=c,c.prototype.visualize=function(e,t){let n=this.vis[e],r=this.wrapper.selectAll(".wrapper > g");if(r.classed("smooth-color",!0),r.classed("green",!1).classed("blue",!1).classed("red",!1),!n)return;let o=this.wrapper.selectAll(".wrapper > g:not(.exiting)")[0][this.lookaround],a="->"===n.dir?"nextElementSibling":"previousElementSibling",i=n.skip?n.skip:0;if("row"===n.mode)for(;o;){let e=o.querySelector("text").textContent;if(!n.chars.includes(e))break;o.classList.add(n.color),o=o[a]}else if("find"===n.mode)for(;o;){let e=o.querySelector("text").textContent;if(o.classList.add(n.color),n.chars.includes(e)){if(!(i>0))break;i-=1}o=o[a]}},c.prototype.write=function(e,t=250){r.prototype.read.call(this)!==e&&(r.prototype.write.call(this,e),this.wrapper.selectAll(".exiting").remove(),o.select(this.wrapper[0][0].childNodes[this.lookaround]).datum(e).select("text").attr("fill-opacity","1").attr("stroke-opacity","1").transition().duration(t/2).attr("fill-opacity","0.4").attr("stroke-opacity","0.1").transition().duration(t/2).text((function(e){return e})).attr("fill-opacity","1").attr("stroke-opacity","1").transition().duration(0).attr("fill-opacity",null).attr("stroke-opacity",null))},c.prototype.headRight=function(e=250){r.prototype.headRight.call(this),this.wrapper.selectAll(".exiting").remove(),l(this.wrapper,this.wrapper.append("g").datum(this.readOffset(this.lookaround)),this.wrapper.select(".tape-cell"),1,-1,e)},c.prototype.headLeft=function(e=250){r.prototype.headLeft.call(this),this.wrapper.selectAll(".exiting").remove(),l(this.wrapper,this.wrapper.insert("g",":first-child").datum(this.readOffset(-this.lookaround)),this.wrapper.select(".wrapper > .tape-cell:last-of-type"),-1,0,e)},e.exports=c},function(e,t,n){"use strict";var r=n(1);function o(e,t){Object.defineProperty(this,"blank",{value:e,writable:!1,enumerable:!0}),this.tape={before:[],after:null==t||0==t.length?[e]:t.slice().reverse(),toString:function(){return this.before.join("")+"🔎"+this.after.slice().reverse().join("")}}}o.prototype.read=function(){return r.last(this.tape.after)},o.prototype.write=function(e){this.tape.after[this.tape.after.length-1]=e},o.prototype.headRight=function(){var e=this.tape.before,t=this.tape.after;e.push(t.pop()),r.isEmpty(t)&&t.push(this.blank)},o.prototype.headLeft=function(){var e=this.tape.before,t=this.tape.after;r.isEmpty(e)&&e.push(this.blank),t.push(e.pop())},o.prototype.toString=function(){return this.tape.toString()},o.prototype.readOffset=function(e){var t=this.tape;return e>=0?e<=t.after.length-1?t.after[t.after.length-1-e]:this.blank:e>=-t.before.length?t.before[t.before.length+e]:this.blank},o.prototype.readRange=function(e,t){return r.range(e,t+1).map((function(e){return this.readOffset(e)}),this)},e.exports=o},function(e,t,n){e.exports=n.p+"tape/tape.css"},function(e,t,n){"use strict";var r=n(2);function o(e,t){var n=r.mapValues(e,(function(e,n){return{label:n,transitions:e,color:t[n]}})),o=[];return r.forEach(n,(function(t,s){t.transitions=t.transitions&&function(){let c={},l={};return r.forEach(t.transitions,(function(u,d){let p=d.split(",").reduce((function(e,t){return""===t&&""===e[e.length-1]?e[e.length-1]=",":e.push(t),e}),[]),h=function(a,i){let s=l[a]||r.tap(l[a]={source:t,target:n[a],labels:[]},o.push.bind(o));return e.tapes<3&&s.labels.push(i),s}(null!=u.state?u.state:s,function(e,t){var n=(null==t.symbol?"":i(String(t.symbol))+",")+String(t.move);return e.map(i).join(",")+"→"+n}(p,u));p.forEach((function(e){c[e]={instruction:a(s,e,u),edge:h}}))})),c}()})),{graph:n,edges:o}}function a(e,t,n){if(t=t.split(""),n.symbol)for(let e=0;e<t.length;e++)n.symbol[e]&&(t[e]=n.symbol[e]);return r.defaults({symbol:t.join("")},n,{state:e})}function i(e){return" "===e?"␣":e}function s(e,t){var n=o(e,t);Object.defineProperties(this,{__graph:{value:n.graph},__edges:{value:n.edges}})}s.prototype.getVertexMap=function(){return this.__graph},s.prototype.getEdges=function(){return this.__edges},s.prototype.getVertex=function(e){return this.__graph[e]},s.prototype.getInstructionAndEdge=function(e,t){var n=this.__graph[e];if(void 0===n)throw new Error("not a valid state: "+String(e));return n.transitions&&n.transitions[t]},e.exports=s},function(e,t,n){"use strict";var r=n(3).isBrowserIEorEdge,o=n(0),a=n(1),i=n(2).assign;function s(e,t){return e.map((function(e,n){return e+t[n]}))}function c(e,t){return s(e,t.map((function(e){return-e})))}function l(e){return Math.sqrt(function(e){return e.map((function(e){return e*e})).reduce((function(e,t){return e+t}),0)}(e))}function u(e,t){return[Math.cos(t)*e,Math.sin(t)*e]}function d(e){e.forEach((function(e){var t=e.source.index+","+e.target.index;this[t]=(this[t]||0)+1}),this)}d.prototype.numEdgesFromTo=function(e,t){return this[String(e)+","+String(t)]||0};var p=Object.freeze({loop:{},arc:{},straight:{}});function h(e,t,n){var r,o;return t===p.loop?(r=u(e,-15*Math.PI/180),o=" a 19,27 45 1,1 "+r[0]+","+(r[1]+e),function(){return"M "+n.source.x+","+(n.source.y-e)+o}):t===p.arc?function(){var t,r,o,a=[n.source.x,n.source.y],i=[n.target.x,n.target.y],d=c(i,a),p=1.2*l(d),h=(r=(t=d)[0],o=t[1],Math.atan2(o,r)),f=-Math.PI/2/2,m=s(a,u(e,h+f)),b=s(i,u(e,h+Math.PI-f));return a[0]<=i[0]?"M "+m[0]+" "+m[1]+" A "+p+" "+p+" 0 0,1 "+b[0]+" "+b[1]:"M "+b[0]+" "+b[1]+" A "+p+" "+p+" 0 0,0 "+m[0]+" "+m[1]}:t===p.straight?function(){var t=[n.source.x,n.source.y],r=[n.target.x,n.target.y],o=c(r,t);if(0===o[0]&&0===o[1])return null;var a,i,s=c(r,function(e,t){return e.map((function(e){return t*e}))}((i=l(a=o),a.map((function(e){return e/i}))),e));return"M "+t[0]+" "+t[1]+" L "+s[0]+" "+s[1]}:void 0}function f(e){return e}function m(){}function b(e,t,n){return Math.max(e,Math.min(n,t))}d.prototype.shapeForEdge=function(e){return e.target.index===e.source.index?p.loop:this.numEdgesFromTo(e.target.index,e.source.index)?p.arc:p.straight};var y=r?function(e,t){return e.append("div").style({width:"100%",height:"0","padding-bottom":100*t+"%",position:"relative"}).append("svg").style({position:"absolute",top:"0",left:"0"})}:function(e){return e.append("svg")};function g(e,t,n){var r=800,i=500,s=o.scale.category10(),c=y(e,i/r);c.attr({viewBox:[0,0,r,i].join(" "),version:"1.1",":xmlns":"http://www.w3.org/2000/svg",":xmlns:xlink":"http://www.w3.org/1999/xlink"});var l=t instanceof Array?t:a.values(t);this.__stateMap=t;var u=o.layout.force().nodes(l).links(n).size([r,i]).linkDistance([50]).charge([-300]).theta(.1).gravity(.1).start(),g=u.drag().on("dragstart",(function(e){e.fixed=!0,c.transition().style("box-shadow","inset 0 0 1px gold")})).on("drag",(function(e){let t=Math.round(e.py/34.641);e.py=34.641*t,t%2==1?(e.px+=20,e.px=40*Math.round(e.px/40),e.px-=20):e.px=40*Math.round(e.px/40),e.x=e.px,e.y=e.py})).on("dragend",(function(){c.transition().style("box-shadow",null)})),v=new d(n),x=c.selectAll(".edgepath").data(n).enter().append("g"),w=function(e,t){return String(-1.1*(t+1))+"em"},L=function(e,t){return String(.6+1.1*(t+1))+"em"};x.each((function(e,t){var n=o.select(this),r=n.append("path").attr({class:"edgepath",id:"edgepath"+t}).each((function(e){e.domNode=this})),a=n.selectAll(".edgelabel").data(e.labels).enter().append("text").attr("class","edgelabel");a.append("textPath").attr("xlink:href",(function(){return"#edgepath"+t})).attr("startOffset","50%").text(f);var i=v.shapeForEdge(e);switch(e.getPath=h(20,i,e),i){case p.straight:a.attr("dy",w),e.refreshLabels=function(){a.attr("transform",(function(){if(e.target.x<e.source.x){var t={x:(n=this.getBBox()).x+n.width/2,y:n.y+n.height/2};return"rotate(180 "+t.x+" "+t.y+")"}return null;var n}))};break;case p.arc:var s;e.refreshLabels=function(){var t=e.target.x<e.source.x;t!==s&&(r.classed("reversed-arc",t),a.attr("dy",t?L:w),s=t)};break;case p.loop:a.attr("transform",(function(e,t){return"translate("+String(8*(t+1))+" "+String(-8*(t+1))+")"})),e.refreshLabels=m}}));var R=x.selectAll(".edgepath"),k=c.selectAll(".node").data(l).enter(),S=k.append("circle").attr("class","node").attr("r",20).style("fill",(function(e,t){return void 0!==e.color?"#"+e.color:s(t)})).each((function(e){e.domNode=this})).on("dblclick",(function(e){e.fixed=!1,u.resume()})).call(g),C=k.append("text").attr("class","nodelabel").attr("dy","0.25em").text((function(e){return e.label}));c.append("defs").selectAll("marker").data(["arrowhead","active-arrowhead","reversed-arrowhead","reversed-active-arrowhead"]).enter().append("marker").attr({id:function(e){return e},viewBox:"0 -5 10 10",refX:function(e){return 0===e.lastIndexOf("reversed-",0)?0:10},orient:"auto",markerWidth:10,markerHeight:10}).append("path").attr("d","M 0 -5 L 10 0 L 0 5 Z").attr("transform",(function(e){return 0===e.lastIndexOf("reversed-",0)?"rotate(180 5 0)":null}));var _=".edgepath {  marker-end: url(#arrowhead);}.edgepath.active-edge {  marker-end: url(#active-arrowhead);}.edgepath.reversed-arc {  marker-start: url(#reversed-arrowhead);  marker-end: none;}.edgepath.active-edge.reversed-arc {  marker-start: url(#reversed-active-arrowhead);  marker-end: none;}";c.append("style").each((function(){this.styleSheet?this.styleSheet.cssText=_:this.textContent=_})),u.on("tick",(function(){S.attr({cx:function(e){return e.x=b(20,r-20,e.x)},cy:function(e){return e.y=b(20,i-20,e.y)}}),C.attr("x",(function(e){return e.x})).attr("y",(function(e){return e.y})),R.attr("d",(function(e){return e.getPath()})),x.each((function(e){e.refreshLabels()})),l.every((function(e){return e.fixed}))&&u.stop()})),this.force=u}n(14);var v=a.mapValues(a.pick(["x","y","px","py","fixed"]));Object.defineProperty(g.prototype,"positionTable",{get:function(){return v(this.__stateMap)},set:function(e){!function(e,t){a.forEach((function(t,n){var r=e[n];void 0!==r&&i(t,r)}),t)}(e,this.__stateMap),this.force.resume()}}),e.exports=g},function(e,t,n){e.exports=n.p+"state-diagram/StateViz.css"},function(e,t,n){"use strict";var r=n(6).parseDocument,o=n(1).fromPairs;function a(e){return n(30)("./"+e+".yaml")}var i=["universal","multitape","shennon1","repeat01","binaryIncrement","divisibleBy3","copy1s","divisibleBy3Base10","matchThreeLengths","matchBinaryStrings","palindrome","busyBeaver3","busyBeaver4","powersOfTwo","lengthMult","binaryAdd","unaryMult","binaryMult"].map((function(e){var t=r(a(e));return t.id=e,[e,t]})),s=Object.freeze(o(i));function c(e){return{}.hasOwnProperty.call(s,e)}var l=i.map((function(e){return e[1]}));t.hasID=c,t.get=function(e){return c(e)?s[e]:null},t.list=l,t.firsttimeDocID="universal",t.blankTemplate=a("_template")},function(e,t,n){"use strict";var r,o,a,i=n(3).isBrowserIEorEdge,s=function(){var e="modernizr";try{return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}}(),c=(r={},Object.freeze({get length(){return Object.keys(r).length},key:function(e){return e in Object.keys(r)?Object.keys(r)[e]:null},getItem:function(e){return{}.hasOwnProperty.call(r,e)?r[e]:null},setItem:function(e,t){r[e]=String(t)},removeItem:function(e){delete r[e]},clear:function(){r={}}})),l=(o=s?localStorage:c,a=i?function(){return window.document.hasFocus()}:function(){return!1},{read:o.getItem.bind(o),write:o.setItem.bind(o),remove:o.removeItem.bind(o),addStorageListener:s?function(e){window.addEventListener("storage",(function(t){a()||t.storageArea===localStorage&&e(t)}))}:function(){},removeStorageListener:s?window.removeEventListener.bind(window,"storage"):function(){}});t.canUseLocalStorage=s,t.KeyValueStorage=l},function(e,t){e.exports=Promise},function(e,t,n){"use strict";const r=n(19),o=n(2),{TMSpecError:a}=n(20),{transformations:i}=n(29);function s(e,t,n){return o.omitBy({symbol:e,move:t,state:n},(function(e){return null==e}))}function c(e,t,n,r){return function(e,t){if(null!=t.state&&!(t.state in e))throw new a("Undeclared state",{problemValue:t.state,suggestion:"Make sure to list all states in the transition table and define their transitions (if any)"});return t}(t,function(){switch(typeof n){case"string":return function(e,t,n){if(n){if(e&&e[t])return e[t];let r=t.match(/^([^\d]\w+)?( |$)/),o=Array(n).fill("H"),i=Array(n);null!=r&&(t=t.slice(r[1].length).trim(),r=r[1]);let c=[];for(;""!==t;){let e=t.match(/^(\d)([RL]?)([^ ]?)( |$)/);if(null===e)throw new a("Unrecognized string",{problemValue:t,info:"An instruction can be a synonym or a state with instructions for tapes. Examples: <code>state2 1R 2R0</code>, <code>2Lx 3R</code>"});t=t.slice(e[0].length).trimLeft();let r=parseInt(e[1]);if(0===r)throw new a("Tape numbers start from 1",{problemValue:t});if(r>n)throw new a("Tape number is bigger than the number of tapes",{problemValue:t,info:`Your machine has only ${n} tapes`});if(r-=1,c.includes(r))throw new a("Two instructions for tape №"+r,{problemValue:t});c.push(r),""!==e[2]&&(o[r]=e[2]),""!==e[3]&&(i[r]="_"===e[3]?" ":e[3])}return s(i,o.join(""),r)}if("L"===t)return{move:"L"};if("R"===t)return{move:"R"};if(e&&e[t])return e[t];throw new a("Unrecognized string",{problemValue:t,info:"An instruction can be a string if it's a synonym or a direction"})}(e,n,r);case"object":if(r)throw new a("Multitape TM only supports string instructions");return function(e){let t,n,r;if(null==e)throw new a("Missing instruction");{let t;if(!Object.keys(e).every((function(e){return t=e,"L"===e||"R"===e||"H"===e||"write"===e})))throw new a("Unrecognized key",{problemValue:t,info:"An instruction always has a tape movement <code>L</code> or <code>R</code>, and optionally can <code>write</code> a symbol"})}if("L"in e&&"R"in e)throw new a("Conflicting tape movements",{info:"Each instruction needs exactly one movement direction, but two were found"});if("L"in e)n="L",r=e.L;else if("R"in e)n="R",r=e.R;else{if(!("H"in e))throw new a("Missing movement direction");n="H",r=e.H}if("write"in e){let n=String(e.write);if(1!==n.length)throw new a("Write requires a string of length 1");t=[n]}return s(t,n,r)}(n);default:throw new a("Invalid instruction type",{problemValue:typeof n,info:"An instruction can be a string (a direction <code>L</code>/<code>R</code> or a synonym) or a mapping (examples: <code>{R: accept}</code>, <code>{write: ' ', L: start}</code>)"})}}())}function l(e,t,n,r,o){if(!n.includes(e))throw new a(t+" has incorrect value",{problemValue:e,state:r,symbol:o,info:"Possible values are: "+JSON.stringify(n)})}t.TMSpecError=a,t.parseSpec=function e(t,n=!1){let s=r.safeLoad(t);if(null==s)throw new a("The document is empty",{info:"Every Turing machine requires a <code>blank</code> tape symbol, a <code>start state</code>, and a transition <code>table</code>"});let u={suggestion:"Examples: <code>blank: ' '</code>, <code>blank: '0'</code>"};if(null==s.blank)throw new a("No blank symbol was specified",u);if(s.blank=String(s.blank),1!==s.blank.length)throw new a("The blank symbol must be a string of length 1",u);if(n&&void 0!==s.tapes){if(!Number.isInteger(s.tapes))throw new a("The number of tapes must be an integer",{problemValue:typeof s.tapes});if(s.tapes>9)throw new a("Why would you need more than 9 tapes?")}else{if(void 0!==s.tapes&&1!==s.tapes)throw new a("This Turing machine has only 1 tape");s.tapes=0}if(s.startState=s["start state"],delete s["start state"],null==s.startState)throw new a("No start state was specified",{suggestion:"Assign one using <code>start state: </code>"});s.startState=String(s.startState),function(e){if(null==e)throw new a("Missing transition table",{suggestion:"Specify one using <code>table:</code>"});if("object"!=typeof e)throw new a("Transition table has an invalid type",{problemValue:typeof e,info:"The transition table should be a nested mapping from states to symbols to instructions"})}(s.table);let d=function(e,t,n){if(null==e)return null;if("object"!=typeof e)throw new a("Synonyms table has an invalid type",{problemValue:typeof e,info:"Synonyms should be a mapping from string abbreviations to instructions (e.g. <code>accept: {R: accept}</code>)"});return o.mapValues(e,(function(e,r){try{return c(null,t,e,n)}catch(e){throw e instanceof a&&(e.details.synonym=r,"Unrecognized string"===e.reason&&(e.details.info="Note that a synonym cannot be defined using another synonym")),e}}))}(s.synonyms,s.table,s.tapes);if(s.table=function(e,t,n){return o.mapValues(t,(function(r,i){if(null==r)return null;if("object"!=typeof r)throw new a("State entry has an invalid type",{problemValue:typeof r,state:i,info:"Each state should map symbols to instructions. An empty map signifies a halting state."});return o.mapValues(r,(function(r,o){try{return c(e,t,r,n)}catch(e){throw e instanceof a&&(e.details.state=i,e.details.symbol=o),e}}))}))}(d,s.table,s.tapes),s.vis=function(e,t,n){0===n&&(n=1);let r={titles:{},info:{},colors:{}};for(let e=0;e<n;e++)r[e]={};if(!e)return r;for(const[o,i]of Object.entries(e)){if(!(o in t))throw new a("Visualization state must be on the state table",{problemValue:o});for(const[e,t]of Object.entries(i))if("title"!==e)if("info"!==e)if("color"!==e)for(let i of e.split(",")){if(i=parseInt(i)-1,isNaN(i))throw new a("Visualization table requires comma-separated tape numbers",{problemValue:e,state:o});if(i<0)throw new a("Tape numbers start from 1",{problemValue:e,state:o});if(i>=n)throw new a("Tape number is bigger than the number of tapes",{problemValue:e,info:`Your machine has only ${e} tapes`});if(t.skip&&("number"!=typeof t.skip||!Number.isInteger(t.skip)))throw new a('"skip" must be an integer',{problemValue:t.skip,state:o});l(t.mode,"mode",["row","find"],o,e),l(t.dir,"dir",["->","<-"],o,e),l(t.color,"color",["green","blue","red"],o,e),t.chars=String(t.chars),r[i][o]=Object.assign({},t)}else r.colors[o]=String(t);else r.info[o]=t;else r.titles[o]=t}return r}(s.vis,s.table,s.tapes),!(s.startState in s.table))throw new a("The start state has to be declared in the transition table");let p=null,h=null;if(s.transform){let t=String(s.transform);if(void 0===i[t])throw new a("No such transform",{problemValue:t,info:"Available transforms are: "+Object.keys(i).join(", ")});[s,p,h]=i[t](s,e)}return[s,p,h]},t.YAMLException=r.YAMLException},function(e,t){e.exports=jsyaml},function(e,t,n){"use strict";function r(e,t={}){this.name="TMSpecError",this.stack=(new Error).stack,this.reason=e,this.details=t||{}}r.prototype=Object.create(Error.prototype),r.prototype.constructor=r,Object.defineProperty(r.prototype,"message",{get:function(){let e=this.reason,t=this.details;function n(e){return"<code>"+e+"</code>"}let r=t.problemValue?" "+n(t.problemValue):"",o=(a=t.state,i=t.symbol,s=t.synonym,null!=a?null!=i?" in the transition from state "+n(a)+" and symbol "+n(i):" for state "+n(a):null!=s?" in the definition of synonym "+n(s):"");var a,i,s;let c=["<strong>"+e+r+"</strong>"+o,t.info,t.suggestion].filter(_.identity).map((function(e){return e+"."}));return o&&c.splice(1,0,"<br>"),c.join(" ")},enumerable:!0}),t.TMSpecError=r},function(e,t){e.exports=ace},function(e,t,n){"use strict";var r=n(16).KeyValueStorage,o=n(15),a=n(3),i=n(1);function s(e){var t=o.get(e);Object.defineProperties(this,{id:{value:e},prefix:{value:"doc."+e},isExample:{value:!!t}}),t&&Object.defineProperties(this,{sourceCode:c(t,this,"sourceCode"),positionTable:c(t,this,"positionTable"),name:{get:function(){return t.name},set:function(){},enumerable:!0}})}function c(e,t,n){var r=Object.getPrototypeOf(t),o=Object.getOwnPropertyDescriptor(r,n),i=o.get;return o.get=function(){return a.coalesce(i.call(t),e[n])},o}s.prototype.path=function(e){return[this.prefix,e].join(".")},function(){var e=r,t=e.read.bind(e),n=function(t,n){null!=n?e.write(t,n):e.remove(t)};function o(e){return{get:function(){return t(this.path(e))},set:function(t){n(this.path(e),t)},enumerable:!0}}var i={sourceCode:o("diagram.sourceCode"),positionTable:{get:function(){return a.applyMaybe(l,t(this.path("diagram.positions")))},set:function(e){n(this.path("diagram.positions"),a.applyMaybe(u,e))},enumerable:!0},editorSourceCode:o("editor.sourceCode"),name:o("name")};Object.defineProperties(s.prototype,i),s.prototype.dataKeys=Object.keys(i)}(),s.prototype.copyFrom=function(e){return this.dataKeys.forEach((function(t){this[t]=e[t]}),this),this},s.prototype.delete=function(){this.copyFrom({})},s.IDFromNameStorageKey=function(e){var t=/^doc\.([^.]+)\.name$/.exec(e);return t&&t[1]},s.addOutsideChangeListener=function(e){var t=/^doc\.([^.]+)\.(.+)$/;r.addStorageListener((function(n){var r=t.exec(n.key);r&&e(r[1],r[2])}))};var l=JSON.parse,u=i.flow(i.mapValues(function(e){var t=Math.pow(10,e);function n(e){return Math.round(e*t)/t}return function(e){var t=i(e).pick(["x","y","px","py"]).mapValues(n).value();return t.fixed=e.fixed,t}}(2)),JSON.stringify);e.exports=s},function(e,t,n){"use strict";var r=n(51),o=n(52),a=n(6),i=n(24).getGist,s=n(4),c=n(1),l=n(0),u=n(17);function d(e){function t(e){return e?function(e){return decodeURIComponent(e.replace("+"," "))}(e):""}var n={};return e.split("&").forEach((function(e){var r=e.split("=");n[t(r[0])]=t(r[1])})),n}function p(e){this.node=e,this.titleNode=e.querySelector(".modal-header .modal-title"),this.bodyNode=e.querySelector(".modal-body"),this.footerNode=e.querySelector(".modal-footer"),this.cancelButtonNode=l.select(this.footerNode).text("").append("button").attr({type:"button",class:"btn btn-default","data-dismiss":"modal"}).text("Cancel").node(),this.$dialog=s(e).one("hide.bs.modal",this.__onClose.bind(this))}function h(e,t){var n=e.append("div").attr("class","panel panel-default");return n.append("div").attr("class","panel-heading").append("h5").attr("class","panel-title").html(t),n}p.prototype.__onClose=function(){this.onClose(),s(this.bodyNode).empty(),s(this.footerNode).empty()},p.prototype.onClose=function(){},p.prototype.show=function(){this.$dialog.modal({backdrop:"static",keyboard:!1})},p.prototype.close=function(){this.$dialog.modal("hide")},p.prototype.setBodyChildNodes=function(e){this.bodyNode.textContent="",this.bodyNode.appendChild(w(e))};var f=Object.freeze(l.selectAll([]));function m(e,t){var n=f;return t.data&&t.data.length&&(n=h(e,t.title)).append("div").attr("class","panel-body").append("ul").attr("class","list-inline").selectAll("li").data(t.data).enter().append("li").text(c.identity),n}function b(e,t){var n=f;return t.data&&t.data.length&&(n=h(e,t.title)).append("table").attr("class","table").call((function(e){e.append("thead").append("tr").selectAll("th").data(t.headers).enter().append("th").text(c.identity),e.append("tbody").selectAll("tr").data(t.data).enter().append("tr").selectAll("td").data(c.identity).enter().append("td").each((function(e){var t=l.select(this);"function"==typeof e?e(t):t.text(e)}))})),n}var y=c.every(c.isEmpty);function g(e,t,n){if(!y(t)){e.append("a").attr({href:"#nondocument-files",class:"disclosure-triangle collapsed",role:"button","data-toggle":"collapse"}).text(n||"Show other files");var r=e.append("div").attr({id:"nondocument-files",class:"collapse"});b(r,{title:"Unexpected error",headers:["Filename","Error"],data:t.otherError.map((function(e){return[e.filename,v(e.error)]}))}).classed("panel-danger",!0),b(r,{title:"Not suitable for import",headers:["Filename","Reason"],data:t.badDoc.map((function(e){return[e.filename,e.error.message]}))}),b(r,{title:"Not valid as YAML",headers:["Filename","Syntax error"],data:t.badYAML.map((function(e){return[e.filename,function(t){t.append("pre").text(e.error.message)}]}))}),m(r,{title:"File is too large",data:t.tooLarge}),m(r,{title:"Different file extension (not <code>.yaml</code>/<code>.yml</code>)",data:t.wrongType})}}function v(e){return e instanceof Error?String(e):e.message||e.name||String(e)}function x(e,t){var n=[],r={wrongType:[],tooLarge:[],badYAML:[],badDoc:[],otherError:[]};return u.each(t,(function(t){var i=t.filename||t.name;if(-1===i.search(/\.ya?ml$/))r.wrongType.push(i);else{if(!(t.truncated||t.size>e))return u.resolve(null!=t.content?t.content:o.readAsText(t)).then((function(e){n.push({filename:i,size:t.size,document:a.parseDocument(e)})})).catch((function(e){var t={filename:i,error:e};e instanceof a.YAMLException?r.badYAML.push(t):e instanceof a.InvalidDocumentError?r.badDoc.push(t):r.otherError.push(t)}));r.tooLarge.push(i)}})).return({documentFiles:n,nonDocumentFiles:r})}function w(e){var t=document.createDocumentFragment();return e.forEach((function(e){"string"==typeof e?t.appendChild(document.createTextNode(e)):t.appendChild(e)})),t}function L(e){var t,n,r,o=R({href:"https://gist.github.com/"+e.gistID,textContent:e.description||"gist "+e.gistID});return e.description?(t="q",n=o,(r=document.createElement(t)).appendChild(n),r):o}function R(e){var t=document.createElement("a");return t.href=e.href,t.target="_blank",t.textContent=e.textContent||e.href,t}function k(e){var t,n,o=e.gistID,a=e.dialogNode,s=e.importDocument,d=new p(a),h=null!=o?(d.titleNode.textContent="Import from GitHub gist",t=R({href:"https://gist.github.com/"+o}),d.setBodyChildNodes(["Retrieving ",t,"…"]),i(o).then((function(e){return n=L({gistID:o,description:e.description}),d.setBodyChildNodes(["Processing ",t,"…"]),c.values(e.files)}))):(d.titleNode.textContent="Import from files",d.setBodyChildNodes(["Processing files…"]),u.resolve(c.toArray(e.files)));d.show();var f=h.then(x.bind(void 0,409600)).then((function(e){var o=e.documentFiles;switch(o.length){case 0:return void function(e){var t=e.nonDocumentFiles,n=e.dialog,r=e.citeLink;l.select(n.bodyNode).text("").call((function(e){e.append("p").append("strong").text(y(t)?"No files were selected.":"None of the files are suitable for import."),r&&e.append("p").text("Requested URL: ").node().appendChild(r),g(e,t,"Show details")})),n.cancelButtonNode.textContent="Close"}({nonDocumentFiles:e.nonDocumentFiles,dialog:d,citeLink:t});case 1:return s(o[0].document),void d.close();default:!function(e){var t=e.documentFiles,n=e.nonDocumentFiles,o=e.citeNode,a=e.dialog,i=e.importDocuments,s=l.select(a.bodyNode).text("");s.append("p").call((function(e){e.append("strong").text("Select documents to import"),o&&(e.node().appendChild(document.createTextNode(" from ")),e.node().appendChild(o))}));var u=new r({table:s.append("table").attr({class:"table table-hover checkbox-table"}),headers:["Filename","Size"],data:t.map((function(e){return[e.filename,(t=e.size,(Math.ceil(10*t/1024)/10).toFixed(1)+" KB")];var t}))});g(s,n);var d=l.select(a.footerNode).append("button").attr({type:"button",class:"btn btn-primary","data-dismiss":"modal"}).property("disabled",!0).text("Import").on("click",(function(){l.select(this).on("click",null);var e=l.set(u.getCheckedValues());i(t.filter((function(t){return e.has(t.filename)})).map(c.property("document")))})).node();u.onChange=function(){d.disabled=u.isCheckedEmpty()}}({documentFiles:o,nonDocumentFiles:e.nonDocumentFiles,dialog:d,citeNode:n,importDocuments:function(e){e.concat().reverse().map(s)}})}})).catch((function(e){d.setBodyChildNodes([D(e)].concat(t?["Requested URL: ",t]:[])),d.cancelButtonNode.textContent="Close"})),m=new u((function(e){d.onClose=function(){f.cancel(),e()}}));return f.return(m)}var S=k,C=k;function _(e,t){var n=document.createElement(e);return n.innerHTML=t,n}function D(e){var t=e.xhr;if(t)return _("p",function(){switch(e.status){case"abort":return[""];case"timeout":return["<strong>The request timed out.</strong>","You can check your connection and try again."];default:return 404===t.status?["<strong>No GitHub gist exists with that ID.</strong>","It’s possible the ID is incorrect, or the gist was deleted."]:0===t.status?["GitHub could not be reached. Your Internet connection may be offline."]:["The import failed because of a <strong>connection error</strong>.","HTTP status code: "+t.status+" "+t.statusText]}}().join("<br>"));var n=document.createElement("pre");return n.textContent=v(e),w([_("p","An unexpected error occurred:"),n])}t.importGist=S,t.importLocalFiles=C,t.runImport=function(e){var t=d(location.search.substring(1))["import-gist"];t&&S(c.assign({gistID:t},e)).finally((function(){try{history.replaceState(null,null,location.pathname)}catch(e){}}))}},function(e,t,n){"use strict";var r=n(4),o=n(17);function a(e){return new o((function(t,n,r){e.then(t,(function(e,t,r){n({xhr:e,status:t,error:r})})),r&&r((function(){try{e.abort()}catch(e){}}))}))}o.config({cancellation:!0}),t.getGist=function(e){return a(r.ajax({url:"https://api.github.com/gists/"+e,type:"GET",dataType:"json",accepts:"application/vnd.github.v3+json"}))},t.createGist=function(e){return a(r.ajax({url:"https://api.github.com/gists",type:"POST",data:JSON.stringify(e),dataType:"json",accepts:"application/vnd.github.v3+json"}))}},,function(e,t,n){"use strict";var r=n(27),o=n(50),a=n(15),i=n(3).toDocFragment,s=n(21),c=n(4);function l(e){return document.getElementById(e)}function u(e,t){l("diagram-column").insertAdjacentHTML("afterbegin",'<div class="alert alert-'+e+' alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>'+t+"</div>")}function d(e){p.duplicate(e,{select:!0,type:"open"})}s.config.loadModule("ace/ext/language_tools"),n(16).canUseLocalStorage||u("info",'<p>Local storage is unavailable. Your browser could be in Private Browsing mode, or it might not support <a href="http://caniuse.com/#feat=namevalue-storage" target="_blank">local storage</a>.</p><strong>Any changes will be lost after leaving the webpage.</strong>'),new Function("/*@cc_on return @_jscript_version; @*/")()<11&&u("warning",'<p><strong>Your <a href="http://whatbrowser.org" target="_blank">web browser</a> is out of date</strong> and does not support some features used by this program.<br><em>The page may not work correctly, and data may be lost.</em></p>Please update your browser, or use another browser such as <a href="http://www.google.com/chrome/browser/" target="_blank">Chrome</a> or <a href="http://getfirefox.com" target="_blank">Firefox</a>.'),c((function(){/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&l("misc-tips-list").insertAdjacentHTML("afterbegin",'<li><strong class="text-warning">Important note for iOS</strong>: iOS saves browser local storage in the cache folder, which is <strong>not backed up</strong>, and is <q cite="https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Browser_compatibility"><strong>subject to occasional clean up</strong>, at the behest of the OS, typically if space is short.</q></li>')})),c((function(){c(".tm-needsready").prop("disabled",!1);var e={dialogNode:l("importDialog"),importDocument:d};n(23).runImport(e);var t=c("#importPanel");t.one("show.bs.modal",(function(){n(53).init({$dialog:t,gistIDForm:l("gistIDForm"),importArgs:e})}));var r=l("exportPanel");n(54).init({$dialog:c(r),getCurrentDocument:function(){return f.save(),p.currentDocument},getIsSynced:f.getIsSynced.bind(f),gistContainer:l("shareGistContainer"),downloadContainer:l("exportDownloadContainer"),copyContentsButton:l("copyContentsButton"),textarea:r.querySelector("textarea")})}));var p=function(){var e=document.getElementById("tm-doc-menu"),t=document.createElement("optgroup");t.label="Documents",e.appendChild(t);var n=document.createElement("optgroup");return n.label="Examples",n.appendChild(i(a.list.map(o.prototype.optionFromDocument))),e.appendChild(n),new o({menu:e,group:t,storagePrefix:"tm.docs",firsttimeDocID:a.firsttimeDocID})}();!function(){p.onChange=function(t,n){switch(n&&n.type){case"duplicate":f.setBackingDocument(t);break;case"delete":f.forceLoadDocument(t);break;default:f.openDocument(t)}e()};var e=function(){var e,n=document.querySelector('[data-target="#renameDialog"]'),r=document.querySelector('[data-target="#deleteDialog"]');function o(){t()}return function(){var t=p.currentDocument.isExample;e!==t&&(t?(n.textContent="Rename a copy…",n.addEventListener("click",o),n.removeAttribute("data-toggle"),r.textContent="Reset this example…",r.setAttribute("data-target","#resetExampleDialog")):(n.textContent="Rename…",n.removeEventListener("click",o),n.setAttribute("data-toggle","modal"),r.textContent="Delete…",r.setAttribute("data-target","#deleteDialog")),e=t)}}();function t(){f.save(),p.duplicate(p.currentDocument,{select:!0})}e();var n=c(l("renameDialog"));[{id:"tm-doc-action-duplicate",callback:t},{id:"tm-doc-action-newblank",callback:function(){p.newDocument({select:!0}),f.editor.insertSnippet&&(f.editor.insertSnippet(a.blankTemplate),f.loadEditorSource())}}].forEach((function(e){document.getElementById(e.id).addEventListener("click",(function(t){t.preventDefault(),e.callback(t),n.modal({keyboard:!1}).one("hidden.bs.modal",(function(){f.editor.focus()}))}))}))}(),function(){var e=c(l("renameDialog")),t=l("renameDialogInput");function n(){p.delete(),f.forceLoadDocument(p.currentDocument)}e.on("show.bs.modal",(function(){t.value=p.currentOption.text})).on("shown.bs.modal",(function(){t.select()})).on("hidden.bs.modal",(function(){var e=t.value;p.currentOption.text!==e&&p.rename(e),t.value=""})),document.getElementById("renameDialogForm").addEventListener("submit",(function(t){t.preventDefault(),e.modal("hide")})),document.getElementById("tm-doc-action-delete").addEventListener("click",(function(){p.delete()})),document.getElementById("tm-doc-action-resetdiscard").addEventListener("click",n),document.getElementById("tm-doc-action-resetsave").addEventListener("click",(function(){p.duplicate(p.currentDocument,{select:!1}),n()}))}();var h,f=function(){function e(e,t){return e.querySelector("button.tm-"+t)}var t=document.getElementById("editor-container"),n=document.getElementById("controls-container"),o=t.parentNode;return new r({simulator:document.getElementById("machine-container"),editorAlerts:document.getElementById("editor-alerts-container"),editor:t,transformed_code:document.getElementById("transformed-code-container")},{simulator:{run:e(n,"run"),step:e(n,"step"),speed:e(n,"speed"),reset:e(n,"reset")},editor:{load:e(o,"editor-load"),revert:e(o,"editor-revert")}},p.currentDocument)}();f.editor.setTheme("ace/theme/chrome"),f.editor.commands.addCommand({name:"save",bindKey:{mac:"Cmd-S",win:"Ctrl-S"},exec:function(){f.loadEditorSource()}}),f.editor.session.setUseWrapMode(!0),c((function(){try{n(56).main(f.editor.commands,l("kbdShortcutTable"))}catch(e){}})),window.addEventListener("beforeunload",(function(e){try{f.save(),p.saveCurrentDocID()}catch(t){return u("warning",'<h4>The current document could not be saved.</h4><p>It’s likely that the <a href="https://en.wikipedia.org/wiki/Web_storage#Storage_size" target="_blank">local storage quota</a> was exceeded. Try downloading a copy of this document, then deleting other documents to make space.</p>'),(e||window.event).returnValue="There is not enough space left to save the current document."}})),window.addEventListener("blur",(function(){f.save()})),h=!1,n(22).addOutsideChangeListener((function(e,t){e!==f.getDocument().id||"name"===t||h||(h=!0,setTimeout((function(){h=!1,f.forceLoadDocument(f.getDocument(),!0)}),100))})),t.controller=f},function(e,t,n){"use strict";var r=n(28),o=n(18),a=n(3),i=n(21),s=n(0),c=o.TMSpecError,l=o.YAMLException,u=i.require("ace/undomanager").UndoManager;function d(e,t,n){this.simulator=new r(e.simulator,t.simulator);var o=i.edit(e.editor);o.session.setOptions({mode:"ace/mode/yaml",tabSize:2,useSoftTabs:!0}),o.setOptions({minLines:15,maxLines:50}),o.$blockScrolling=1/0;var a=i.edit(e.transformed_code);a.session.setOptions({mode:"ace/mode/yaml",tabSize:2,useSoftTabs:!0}),a.setOptions({minLines:15,maxLines:50}),a.$blockScrolling=1/0,a.setReadOnly(!0);var s=t.editor,c=this;s.load.addEventListener("click",(function(){c.loadEditorSource(),c.save(),c.editor.focus()})),s.revert.addEventListener("click",(function(){c.revertEditorSource(),c.editor.focus()})),Object.defineProperties(this,{__document:{value:{editor:{}},writable:!0},buttons:{value:t},containers:{value:e},editor:{value:o,enumerable:!0},transformed_code:{value:a,enumerable:!0}}),this.openDocument(n)}function p(e){return{row:e.mark.line,column:e.mark.column,text:"Not valid YAML (possibly caused by a typo):\n"+e.message,type:"error"}}d.prototype.getDocument=function(){return this.__document},d.prototype.setBackingDocument=function(e){this.__document=e},d.prototype.openDocument=function(e){if(this.getDocument().id!==e.id)return this.save(),this.forceLoadDocument(e)},d.prototype.forceLoadDocument=function(e,t){this.setBackingDocument(e);var n=e.sourceCode,r=e.editorSourceCode;if(this.simulator.clear(),this.setEditorValue(null==r?n:r),t||this.editor.session.setUndoManager(new u),null==r)this.loadEditorSource();else{this.isSynced=!1;try{this.simulator.sourceCode=n,this.simulator.positionTable=e.positionTable}catch(e){this.showCorruptDiagramAlert(!0)}}},d.prototype.save=function(){var e=this.getDocument();this.hasValidDiagram?(e.editorSourceCode=this.isSynced?void 0:this.editor.getValue(),e.sourceCode=this.simulator.sourceCode,e.positionTable=this.simulator.positionTable):null==e.editorSourceCode?e.sourceCode=this.editor.getValue():e.editorSourceCode=this.editor.getValue()},d.prototype.setEditorValue=function(e){this.editor.setValue(a.coalesce(e,""),-1),this.setAlertErrors([])},d.prototype.setAlertErrors=function(e){var t=this,n=s.select(t.containers.editorAlerts).selectAll(".alert").data(e,(function(e){return String(e)}));n.exit().remove(),n.enter().append("div").attr("class","alert alert-danger").attr("role","alert").each((function(e){var n=s.select(this);if(e instanceof l){var r=p(e),o=r.row+1,a=r.column;n.append("strong").text("Syntax error on ").append("a").text("line "+o).on("click",(function(){t.editor.gotoLine(o,a,!0),t.editor.focus(),s.event.preventDefault()})).attr("href","#"+t.containers.editor.id),n.append("br"),n.append("span").text("Possible reason: "+e.reason)}else e instanceof c?n.html(e.message):n.html("<strong>Unexpected error</strong>: "+e)})),t.editor.session.setAnnotations(e.map((function(e){return e instanceof l?p(e):null})).filter((function(e){return e})))},d.prototype.setLoadButtonSuccess=function(e){s.select(this.buttons.editor.load).classed({"btn-success":e,"btn-primary":!e})},Object.defineProperty(d.prototype,"isSynced",{set:function(e){if(e=Boolean(e),this.__isSynced!==e&&(this.__isSynced=e,this.setLoadButtonSuccess(e),e)){var t=function(){this.isSynced=!1,this.editor.removeListener("change",t)}.bind(this);this.editor.on("change",t)}},get:function(){return this.__isSynced}}),d.prototype.getIsSynced=function(){return Boolean(this.isSynced)},Object.defineProperty(d.prototype,"hasValidDiagram",{get:function(){return Boolean(this.simulator.sourceCode)}}),d.prototype.showCorruptDiagramAlert=function(e){var t,n=s.select(this.simulator.container);if(e){var r=this.buttons.editor.revert.textContent.trim();n.html("").append("div").attr("class","alert alert-danger").html("<h4>This imported document has an error</h4>"+["The diagram was not valid and could not be displayed.","You can either load a new diagram from the editor, or attempt to recover this one","using "+(t=r,"<q>"+t+"</q> (which will replace the current editor contents).")].join("<br>"))}else n.selectAll(".alert").remove()},d.prototype.loadEditorSource=function(){var e=[];try{var t=!this.hasValidDiagram;this.simulator.sourceCode=this.editor.getValue(),t&&(this.showCorruptDiagramAlert(!1),this.simulator.positionTable=this.getDocument().positionTable),null===this.simulator.transformed_code?this.transformed_code.container.classList.add("hidden"):(this.transformed_code.container.classList.remove("hidden"),this.transformed_code.setValue(this.simulator.transformed_code,-1))}catch(t){e=[t]}this.isSynced=0===e.length,this.setAlertErrors(e)},d.prototype.revertEditorSource=function(){this.setEditorValue(this.hasValidDiagram?this.simulator.sourceCode:this.getDocument().sourceCode),this.hasValidDiagram?this.isSynced=!0:this.loadEditorSource()},e.exports=d},function(e,t,n){"use strict";const{parseSpec:r}=n(18),o=n(7),{watchInit:a}=n(5),i=n(2).values;function s(e,t){this.container=e,this.buttons=t,this.transformed_code=null;const n=this;t.step.addEventListener("click",(function(){n.machine.isRunning=!1,n.machine.step()})),t.run.addEventListener("click",(function(){n.machine.isRunning=!n.machine.isRunning})),t.speed.addEventListener("click",(function(){if(!n.machine)return;const e=[1e3,500,500/1.5,250,500/3];let r=e.indexOf(n.machine.animationDuration);r=(r+1)%e.length;let o=n.machine.animationDuration=e[r];t.speed.lastChild.textContent="x"+500/o})),t.reset.addEventListener("click",(function(){n.machine.reset()})),t.all=i(t),this.clear()}function c(e,t,n,r,o){a(o,"isHalted",(function(n,r,o){return function(n){e.disabled=n,t.disabled=n}(o),o})),a(o,"isRunning",(function(e,o,a){return function(e){t.innerHTML=e?r:n}(a),a}))}s.prototype.clear=function(){this.sourceCode=null},Object.defineProperties(s.prototype,{sourceCode:{get:function(){return this.__sourceCode},set:function(e){if(this.machine&&(this.machine.isRunning=!1,this.machine.stateviz.force.stop()),null==e)this.machine=null,this.container.innerHTML="";else{let[t,n,a]=r(e,!0);if(this.transformed_code=a,this.machine){let e=this.machine.positionTable;this.clear(),this.machine=new o(this.container,t,n||e)}else this.machine=new o(this.container,t,n)}this.__sourceCode=e},enumerable:!0},positionTable:{get:function(){return this.machine&&this.machine.positionTable},set:function(e){this.machine&&e&&(this.machine.positionTable=e)},enumerable:!0},machine:{get:function(){return this.__machine},set:function(e){this.__machine=e,this.rebindButtons()}}}),s.prototype.htmlForRunButton='<span class="glyphicon glyphicon-play" aria-hidden="true"></span><br>Run',s.prototype.htmlForPauseButton='<span class="glyphicon glyphicon-pause" aria-hidden="true"></span><br>Pause',s.prototype.rebindButtons=function(){var e=this.buttons,t=null!=this.machine;t&&c(e.step,e.run,this.htmlForRunButton,this.htmlForPauseButton,this.machine),e.all.forEach((function(e){e.disabled=!t}))},e.exports=s},function(e,t,n){"use strict";const{TMSpecError:r}=n(20),o=n(15);function a(e){let t=[],n=[];for(const r in e.table){n.includes(r)||n.push(r);for(const[o,a]of Object.entries(e.table[r]||{}))for(const e of s(o))t.includes(e)||t.push(e),a.state&&!n.includes(a.state)&&n.push(a.state),a.symbol&&!t.includes(a.symbol[0])&&t.push(a.symbol[0])}return[t,n]}function i(e,t=" "){let n=e[0].map((t,n)=>Math.max(...e.map(e=>e[n].length)));return e.map(e=>e.map((e,r)=>e.padEnd(n[r],t)))}function s(e){return e.split(",").reduce((function(e,t){return""===t&&""===e[e.length-1]?e[e.length-1]=",":e.push(t),e}),[])}function c(e,t,n){let r={[t]:n};e.splice(e.indexOf(t),1);for(const t of e)n+=n[0],r[t]=n;return r}function l(e,t){let[n,o]=a(e);if(n.length<=2)throw new r("It seems like you have too few symbols to apply Shennon's second theorem");n.sort(),n.includes("∂")&&(n.splice(n.indexOf("∂"),1),n.unshift("∂")),n.includes(e.blank)&&(n.splice(n.indexOf(e.blank),1),n.unshift(e.blank));let i=0,c=Math.ceil(Math.log2(n.length)),l={};for(const e of n)l[e]=i.toString(2).padStart(c,"0"),i+=1;n=l;let u=Array.prototype.map.call(e.input,e=>n[e]).join(""),d=[],p={};function h(e,t,n,r,o){void 0===p[e]&&(p[e]={}),void 0===p[e][t]&&(p[e][t]={symbol:r,move:o,state:n},d.push([e,t,r,o,n]))}for(const t in e.table)null===e.table[t]&&(p[t]=null);for(const[t,r,o]of function*(e){for(const t in e.table)for(const[n,r]of Object.entries(e.table[t]||{}))for(const e of s(n))yield[t,e,r]}(e)){let e=n[r],{symbol:a,state:i,move:s}=o;i=i||t,a=a||r;let l=n[a];h(t,e[0],`${t}_${e[0]}`,e[0],"R");for(let n=1;n<c-1;++n)h(`${t}_${e.slice(0,n)}`,e[n],`${t}_${e.slice(0,n+1)}`,e[n],"R");h(`${t}_${e.slice(0,-1)}`,e[e.length-1],`${t}_${e}`,e[e.length-1],"H"),h(`${t}_${e}`,e[e.length-1],`${i}_${s}_${l}`,e[e.length-1],"H");for(let t=c-1;t>0;--t)h(`${i}_${s}_${l.slice(0,t+1)}`,e[t],`${i}_${s}_${l.slice(0,t)}`,l[t],"L");if(h(`${i}_${s}_${l[0]}`,e[0],`${i}_${s}`,l[0],"H"),"R"===s){h(`${i}_${s}`,l[0],`${i}_${s}_move_${c}`,l[0],"H");for(let e=c;e>1;--e)h(`${i}_${s}_move_${e}`,l[c-e],`${i}_${s}_move_${e-1}`,l[c-e],"R");h(`${i}_${s}_move_1`,l[c-1],""+i,l[c-1],"R")}else if("H"===s)h(`${i}_${s}`,l[0],""+i,l[0],"H");else if("L"===s){h(`${i}_${s}`,l[0],`${i}_${s}_move_${c}`,l[0],"H"),h(`${i}_${s}_move_${c}`,l[0],`${i}_${s}_move_${c-1}`,l[0],"L");for(let e=c-1;e>1;--e)h(`${i}_${s}_move_${e}`,0,`${i}_${s}_move_${e-1}`,0,"L"),h(`${i}_${s}_move_${e}`,1,`${i}_${s}_move_${e-1}`,1,"L");h(`${i}_${s}_move_1`,0,""+i,0,"L"),h(`${i}_${s}_move_1`,1,""+i,1,"L")}null!==d[d.length-1]&&d.push(null)}let f={input:u,tapes:0,blank:" ",startState:e.startState,table:p,vis:{titles:{},info:{},colors:{},0:{}}};let m=Object.entries(n).sort((e,t)=>parseInt(e[1].length,2)-parseInt(t[1].length,2)).map(([e,t])=>`# ${e.replace(" ","␣")} = ${t}\r`).join("\n")+"\r\n",b=Math.max(...d.map(e=>e?e[0].length:0));return m+=d.map(e=>e?`${e[0].padEnd(b)} ${e[1]} -> ${e[2]} ${e[3]} ${e[4]}`:"").join("\n"),[f,null,m]}t.transformations={universal:function(e,t){if(0!==e.tapes)throw new r("For universal transform tapes must be 1");const n=e=>e.replace(" ","⎵");let{sourceCode:l,positionTable:u}=o.get("universal"),[d]=t(l,!0),[p,h]=a(e),f=[];for(const t in e.table)null===e.table[t]&&f.push(t);p.sort(),p=c(p,e.blank,"1"),h=c(h,e.startState,"2");let m,b={R:"3",L:"33",H:"333",null:"333",undefined:"333"},y=[],g=[],v=">",x=">"+h[e.startState];for(const t in e.table)for(const[n,r]of Object.entries(e.table[t]||{}))for(const e of s(n)){let n=r.symbol&&r.symbol[0]||e,o=r.state||t;y.push([e,t,n,o,r.move]),g.push([p[e],h[t],p[n],h[o],f.includes(r.state)?"3333":b[r.move]]),v+=g[g.length-1].join("")}m=Array.prototype.map.call(e.input,e=>p[e]).join(";"),m=">;"+m+";",d.input=[v,x,m],y=y.map(e=>e.map(n)),g=g.map(e=>e.map(n)),y=i(y),g=i(g),y=y.map(e=>"    # "+e.join(" ")),g=g.map(e=>"    # "+e.join(" "));const w=(e,t)=>e[1].length-t[1].length;let L=Math.max(...Object.keys(h).map(e=>e.length));l=l.split("\n");let R=l.findIndex(e=>e.startsWith("input:"));return l.splice(R+1,3,...d.input.map(e=>`  - '${e}'`),...Object.entries(p).sort(w).map(([e,t])=>`    # ${n(e)} = ${t}\r`),"    #\r",...Object.entries(h).sort(w).map(([e,t])=>`    # ${e.padStart(L)} = ${t}\r`),"    #\r",...y,...g),l=l.join("\n"),[d,u,l]},shennon2:l,shennon2_0:function(e,t){let[n,r,o]=l(e);return n.blank="0",[n,r,o]}}},function(e,t,n){var r={"./_template.yaml":31,"./binaryAdd.yaml":32,"./binaryIncrement.yaml":33,"./binaryMult.yaml":34,"./busyBeaver3.yaml":35,"./busyBeaver4.yaml":36,"./copy1s.yaml":37,"./divisibleBy3.yaml":38,"./divisibleBy3Base10.yaml":39,"./lengthMult.yaml":40,"./matchBinaryStrings.yaml":41,"./matchThreeLengths.yaml":42,"./multitape.yaml":43,"./palindrome.yaml":44,"./powersOfTwo.yaml":45,"./repeat01.yaml":46,"./shennon1.yaml":47,"./unaryMult.yaml":48,"./universal.yaml":49};function o(e){var t=a(e);return n(t)}function a(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id=30},function(e,t){e.exports="input: '${2}'\nblank: '${3: }'\nstart state: ${4:start}\ntable:\n  ${4}:\n    ${5}\n"},function(e,t){e.exports="name: binary addition\nsource code: |\n  # Adds two binary numbers together.\n\n  # Format: Given input a+b where a and b are binary numbers,\n  # leaves c b on the tape, where c = a+b.\n  # Example: '11+1' => '100 1'.\n  input: '1011+11001'\n  blank: ' '\n  start state: right\n  table:\n    # Start at the second number's rightmost digit.\n    right:\n      [0,1,+]: R\n      ' ': {L: read}\n\n    # Add each digit from right to left:\n    # read the current digit of the second number,\n    read:\n      0: {write: c, L: have0}\n      1: {write: c, L: have1}\n      +: {write: ' ', L: rewrite}\n    # and add it to the next place of the first number,\n    # marking the place (using O or I) as already added.\n    have0: {[0,1]: L, +: {L: add0}}\n    have1: {[0,1]: L, +: {L: add1}}\n    add0:\n      [0,' ']: {write: O, R: back0}\n      1      : {write: I, R: back0}\n      [O,I]  : L\n    add1:\n      [0,' ']: {write: I, R: back1}\n      1      : {write: O, L: carry}\n      [O,I]  : L\n    carry:\n      [0,' ']: {write: 1, R: back1}\n      1      : {write: 0, L}\n    # Then, restore the current digit, and repeat with the next digit.\n    back0:\n      [0,1,O,I,+]: R\n      c: {write: 0, L: read}\n    back1:\n      [0,1,O,I,+]: R\n      c: {write: 1, L: read}\n\n    # Finish: rewrite place markers back to 0s and 1s.\n    rewrite:\n      O: {write: 0, L}\n      I: {write: 1, L}\n      [0,1]: L\n      ' ': {R: done}\n    done:\n\n\n  # Exercise:\n\n  # • Generate the Fibonacci sequence in binary, listed from right to left:\n  #   ...1101 1000 101 11 10 1 1 0\n  #   Hint: prefix the current number with a +, copy the previous number\n  #   and place it left of the +, run the adder, and repeat.\n  #   Example: '1 0' => '+1 0' => '0+1 0' => '1 1 0' => '+1 1 0' => ...\npositions:\n  right:   {x: 300, y: 130}\n  rewrite: {x: 500, y: 130}\n  done:    {x: 620, y: 130}\n\n  back0:  {x: 250, y: 250}\n  read:   {x: 400, y: 250}\n  back1:  {x: 550, y: 250}\n  carry:  {x: 650, y: 250}\n\n  add0:   {x: 150, y: 400}\n  have0:  {x: 300, y: 400}\n  have1:  {x: 500, y: 400}\n  add1:   {x: 650, y: 400}\n"},function(e,t){e.exports="name: binary increment\nsource code: |\n  # Adds 1 to a binary number.\n  input: '1011'\n  blank: ' '\n  start state: right\n  table:\n    # scan to the rightmost digit\n    right:\n      [1,0]: R\n      ' '  : {L: carry}\n    # then carry the 1\n    carry:\n      1      : {write: 0, L}\n      [0,' ']: {write: 1, L: done}\n    done:\n\n\n  # Exercises:\n\n  # • Modify the machine to always halt on the leftmost digit\n  #   (regardless of the number's length).\n  #   Hint: add a state between carry and done.\n\n  # • Make a machine that adds 2 instead of 1.\n  #   Hint: 2 is '10' in binary, so the last digit is unaffected.\n  #   Alternative hint: chain together two copies of the machine from\n  #   the first exercise (renaming the states of the second copy).\n\n  # • Make a machine to subtract 1.\n  #   To simplify things, assume the input is always greater than 0.\npositions:\n  right: {x: 230, y: 250}\n  carry: {x: 400, y: 250}\n  done: {x: 570, y: 250}\n"},function(e,t){e.exports="name: binary multiplication\nsource code: |\n  # Multiplies two binary numbers together.\n\n  # Examples: '11*11' => '1001', '111*110' => '101010'.\n  input: '11*101' # 3*5 = 15 (1111 in binary)\n  blank: ' '\n  start state: start\n  table:\n    # Prefix the input with a '+', and go to the rightmost digit.\n    start:\n      [0,1]: {L: init}\n    init:\n      ' ': {write: '+', R: right}\n    right:\n      [0,1,'*']: R\n      ' ': {L: readB}\n\n    # Read and erase the last digit of the multiplier.\n    # If it's 1, add the current multiplicand.\n    # In any case, double the multiplicand afterwards.\n    readB:\n      0: {write: ' ', L: doubleL}\n      1: {write: ' ', L: addA}\n    addA:\n      [0,1]: L\n      '*': {L: read} # enter adder\n    # Double the multiplicand by appending a 0.\n    doubleL:\n      [0,1]: L\n      '*': {write: 0, R: shift}\n    double: # return from adder\n      [0,1,+]: R\n      '*': {write: 0, R: shift}\n    # Make room by shifting the multiplier right 1 cell.\n    shift:\n      0: {write: '*', R: shift0}\n      1: {write: '*', R: shift1}\n      ' ': {L: tidy} # base case: multiplier = 0\n    shift0:\n      0:   {R: shift0}\n      1:   {write: 0, R: shift1}\n      ' ': {write: 0, R: right}\n    shift1:\n      0:   {write: 1, R: shift0}\n      1:   {R: shift1}\n      ' ': {write: 1, R: right}\n\n    tidy:\n      [0,1]: {write: ' ', L}\n      +: {write: ' ', L: done}\n    done:\n\n  # This is the 'binary addition' machine almost verbatim.\n  # It's adjusted to keep the '+'\n  # and to lead to another state instead of halting.\n    read:\n      0: {write: c, L: have0}\n      1: {write: c, L: have1}\n      +: {L: rewrite} # keep the +\n    have0: {[0,1]: L, +: {L: add0}}\n    have1: {[0,1]: L, +: {L: add1}}\n    add0:\n      [0,' ']: {write: O, R: back0}\n      1      : {write: I, R: back0}\n      [O,I]  : L\n    add1:\n      [0,' ']: {write: I, R: back1}\n      1      : {write: O, L: carry}\n      [O,I]  : L\n    carry:\n      [0,' ']: {write: 1, R: back1}\n      1      : {write: 0, L}\n    back0:\n      [0,1,O,I,+]: R\n      c: {write: 0, L: read}\n    back1:\n      [0,1,O,I,+]: R\n      c: {write: 1, L: read}\n    rewrite:\n      O: {write: 0, L}\n      I: {write: 1, L}\n      [0,1]: L\n      ' ': {R: double} # when done, go to the 'double' state\n\n\n  # Remark:\n  # We can view the machine as expressing a recursive function:\n\n  #   multiply(a, b) = mult(0, a, b)\n\n  #   mult(acc, a, 0     ) = acc\n  #   mult(acc, a, 2k + 0) = mult(acc    , 2a, k)   where k ≠ 0\n  #   mult(acc, a, 2k + 1) = mult(acc + a, 2a, k)\n\n  # where a, b, and k are natural numbers.\n\n  # Each reduction maintains the invariant\n  #   mult(acc, a, b) = acc + a * b\n  # Note that mult's third argument (b) is always decreasing,\n  # so mult is guaranteed to halt.\n  # Eventually b reaches 0 and the result is simply the accumulator.\npositions:\n  start:  {x: 80 , y: 70}\n  init:   {x: 190, y: 70}\n  tidy:   {x: 730, y: 70}\n  done:   {x: 730, y: 180}\n\n  right:  {x: 300, y: 115}\n  shift:  {x: 600, y: 115}\n  shift1: {x: 450, y: 70}\n  shift0: {x: 450, y: 160}\n\n  readB:  {x: 300, y: 215}\n  addA:   {x: 160, y: 215}\n  doubleL: {x: 550, y: 215}\n\n  rewrite: {x: 363, y: 300}\n  double: {x: 650, y: 300}\n\n  back0:  {x: 160, y: 370}\n  read:   {x: 300, y: 370}\n  back1:  {x: 440, y: 370}\n  carry:  {x: 540, y: 370}\n\n  add0:   {x:  60, y: 470}\n  have0:  {x: 200, y: 470}\n  have1:  {x: 400, y: 470}\n  add1:   {x: 540, y: 470}\n"},function(e,t){e.exports="name: 3-state busy beaver\nsource code: |\n  # A 3-state 2-symbol busy beaver for most non-blank symbols.\n  # It takes 13 steps and leaves 6 non-blank symbols on the tape.\n\n  # What's a \"busy beaver\"?\n  #   Suppose every possible Turing machine with n states and k symbols\n  #   (for instance, 3 states and 2 symbols) were started on\n  #   a blank tape with no input.\n  #   Some of the machines would never halt. Out of the ones that do halt,\n  #   a machine that leaves the most non-blank symbols on the tape\n  #   is called a busy beaver.\n  blank: '0'\n  start state: A\n  table:\n    A:\n      0: {write: 1, R: B}\n      1: {L: C}\n    B:\n      0: {write: 1, L: A}\n      1: R\n    C:\n      0: {write: 1, L: B}\n      1: {R: H}\n    H:\n\n  # An alternative criterion is halting after the most steps.\n  # This busy beaver takes the most steps (21) but only prints 5 1's:\n    # A:\n    #   0: {write: 1, R: B}\n    #   1: {R: H}\n    # B:\n    #   0: {write: 1, L: B}\n    #   1: {write: 0, R: C}\n    # C:\n    #   0: {write: 1, L}\n    #   1: {L: A}\n    # H:\n\n\n  # Exercise:\n\n  # • Consider Turing machines that have n states and k symbols.\n  #   Instead of a missing instruction, halting is denoted by\n  #   a transition to a special \"halt\" state (for a total of n+1 states).\n  #   How many different transition functions are possible?\n\n  #   Hint: Each instruction writes a symbol, moves left or right,\n  #   and goes to a state.\n  #   There is one instruction per combination of non-halt state & symbol.\n\n\n\n  #   Answer: (2k(n+1))^(nk)\npositions:\n  A: {x: 320, y: 296.188}\n  B: {x: 400, y: 157.624}\n  C: {x: 480, y: 296.188}\n  H: {x: 400, y: 376.188}\n"},function(e,t){e.exports='name: 4-state busy beaver\nsource code: |\n  # A 4-state 2-symbol busy beaver\n  # that halts after 107 steps, leaving 13 1\'s on the tape.\n  # It takes the most steps *and* prints the most 1\'s.\n  blank: 0\n  start state: A\n  table:\n    A: {0: {write: 1, R: B}, 1:           {L: B}}\n    B: {0: {write: 1, L: A}, 1: {write: 0, L: C}}\n    C: {0: {write: 1, R: H}, 1:           {L: D}}\n    D: {0: {write: 1, R   }, 1: {write: 0, R: A}}\n    H:\n\n\n  # Finding a busy beaver requires considering every n-state k-symbol\n  # machine and proving either that it halts with no more non-blank symbols\n  # or that it never halts at all.\n\n  # Even with strategies to reduce the search space—\n  # including normalization, accelerated simulation, and automated proofs—\n  # there are still machines that show surprising complexity\n  # and require individual analysis.\n\n  # This 4-state busy beaver was proven by Allen Brady in 1983.\n  # Busy beavers for 5 states and above are as yet unknown.\n  # At the time of writing, the current 5-state 2-symbol contender\n  # takes 47,176,870 steps to halt, and the 6-state contender\n  # takes over 7.4 * 10^36534 steps\n  # (http://www.logique.jussieu.fr/~michel/bbc.html).\n  # "Given that 5-state 2-symbol halting Turing machines can compute\n  # Collatz-like congruential functions, it may be very hard to find\n  # [the next busy beaver]" (https://oeis.org/A060843).\n\n\n  # An entertaining read on busy beavers and their profoundness:\n\n  # • "Who Can Name the Bigger Number?"\n  #   http://www.scottaaronson.com/writings/bignumbers.html\npositions:\n  # square with side length 160\n  A: {x: 320, y: 170}\n  B: {x: 480, y: 170}\n\n  C: {x: 480, y: 330}\n  D: {x: 320, y: 330}\n  H: {x: 620, y: 330}\n'},function(e,t){e.exports="name: copy 1s\nsource code: |\n  # Copies a string of consecutive 1s.\n  input: '111'\n  blank: 0\n  start state: each\n  table:\n    # mark the current 1 by erasing it\n    each:\n      0: {R: H}\n      1: {write: 0, R: sep}\n    # skip to the separator\n    sep:\n      0: {R: add}\n      1: R\n    # skip to the end of the copy and write a 1\n    add:\n      0: {write: 1, L: sepL}\n      1: R\n    # return to the separator\n    sepL:\n      0: {L: next}\n      1: L\n    # return to the erased 1, restore it, and then advance to the next 1\n    next:\n      0: {write: 1, R: each}\n      1: L\n    H:\n\n\n  # Exercises:\n\n  # • Edit the machine to copy the string indefinitely,\n  #   i.e. given the input '11', produce 11011011011...\n  #   Hint: this can be done by modifying only one transition.\n\n  # • Make a machine to output the endless sequence 1011011101111011111...\npositions:\n  each: {x: 400   , y: 100}\n  sep:  {x: 400.01, y: 250}\n  add:  {x: 400.02, y: 400}\n  sepL: {x: 250   , y: 250}\n  next: {x: 250.01, y: 100}\n  H:    {x: 550   , y: 100}\n"},function(e,t){e.exports="name: divisible by 3\nsource code: |\n  # Checks if a binary number is divisible by 3.\n  input: '1001' # try '1111' (15), '10100' (20), '111001' (57)\n  blank: ' '\n  # How it works:\n\n  # Consider reading a binary number, say 10011 (19),\n  # from left to right one digit at a time.\n  # Each time a digit is read, the new value equals the new digit\n  # plus the old value shifted left one place (multiplied by 2).\n\n  # Digits  Value\n  # -------------\n  #         0\n  # 1       1\n  # 10      2\n  # 100     4\n  # 1001    9\n  # 10011   19\n\n  # Now instead of tracking the entire number, just track the remainder.\n  # It works the same way.\n  start state: q0\n  table:\n    q0:\n      0: R       # 2*0 + 0 = 0\n      1: {R: q1} # 2*0 + 1 = 1\n      ' ': {R: accept}\n    q1:\n      0: {R: q2} # 2*1 + 0 = 2\n      1: {R: q0} # 2*1 + 1 = 3\n    q2:\n      0: {R: q1} # 2*2 + 0 = 4\n      1: {R: q2} # 2*2 + 1 = 5\n    accept:\n\n\n  # Exercises:\n\n  # • Modify the machine to check if n-1 is divisible by 3,\n  #   where n is the input. That is, accept the binary of 1, 4, 7, 10, ...\n  #   Hint: this can be done without modifying the tape (no 'write').\n\n  # • Round the number up to the nearest multiple of 3.\n  #   Hint: do one pass right to find the remainder, then another pass left\n  #   to add. See the 'binary increment' example for how to add.\n\n  # • Round the number down to the nearest multiple of 3.\npositions:\n  q0: {x: 230, y: 250}\n  q1: {x: 400, y: 250}\n  q2: {x: 570, y: 250}\n  accept: {x: 230.01, y: 380}\n"},function(e,t){e.exports="name: divisible by 3 (base 10)\nsource code: |\n  # Checks if a base 10 number is divisible by 3.\n  input: 4728 # try 42, 57, 1337, 5328, 7521, 314159265\n  blank: ' '\n  # This uses the same idea as the base 2 version.\n  #\n  # To make things more interesting, we derive the step relation:\n  # Let x be the number left of the tape head,\n  #     d the digit under the head, and\n  #     x' the number up to and including the head.\n  # Then\n  #   x' = 10x + d .\n  # Notice 10 ≡ 1 (mod 3). Therefore\n  #   x' ≡ x + d (mod 3) .\n  # Each step simply adds the new digit's remainder mod 3.\n  start state: q0\n  table:\n    q0:\n      [0,3,6,9]: R     # 0 + 0 ≡ 0 (mod 3)\n      [1,4,7]: {R: q1} # 0 + 1 ≡ 1\n      [2,5,8]: {R: q2} # 0 + 2 ≡ 2\n      ' ': {R: accept}\n    q1:\n      [0,3,6,9]: R     # 1 + 0 ≡ 1\n      [1,4,7]: {R: q2} # 1 + 1 ≡ 2\n      [2,5,8]: {R: q0} # 1 + 2 ≡ 0\n    q2:\n      [0,3,6,9]: R     # 2 + 0 ≡ 2\n      [1,4,7]: {R: q0} # 2 + 1 ≡ 0\n      [2,5,8]: {R: q1} # 2 + 2 ≡ 1\n    accept:\n\n\n  # Exercises:\n\n  # • Check for divisibility by 5.\n  #   Hint: only 2 states (besides accept) are required.\n\n  # • Check for divisibility by 4.\n  #   Hint: use 4 states (besides accept).\npositions:\n  # centered equilateral triangle with side length 250\n  q0: {x: 275, y: 322.1688}\n  q1: {x: 400, y: 105.6624}\n  q2: {x: 525, y: 322.1688}\n  accept: {x: 275.01, y: 430}\n"},function(e,t){e.exports="name: multiplied lengths\nsource code: |\n  # Decides the language { a^(i)b^(j)c^(k) | i*j = k and i,j,k ≥ 1 }.\n  # (a's followed by b's then c's,\n  # where the number of a's multiplied by the number of b's\n  # equals the number of c's.)\n  input: aabbbcccccc # try abc, b, aabcbc, aabcc, aabbbbcccccccc\n  blank: ' '\n  start state: start\n\n  table:\n    # Check for the form a^(i)b^(j)c^(k) where i,j,k ≥ 1.\n    start:  {        a: {R: a+}}\n    a+:     {a: R,   b: {R: b+}}\n    b+:     {b: R,   c: {R: c+}}\n    c+:     {c: R, ' ': {L: left}}\n    left:\n      [a,b,c]: L\n      ' ': {R: eachA}\n    # Then check that i*j = k.\n    #   The approach is two nested loops:\n    #   For each 'a':\n    #     For each 'b':\n    #       Mark one 'c'\n    #   At the end, check that all c's are marked.\n    eachA:\n      a: {write: ' ', R: eachB}\n      b: {R: scan}\n    eachB:\n      a: R\n      b: {write: B, R: markC}\n      C: {L: nextA}\n    markC:\n      [b,C]: R\n      c: {write: C, L: nextB}\n    nextB:\n      [b,C]: L\n      B: {R: eachB}\n    nextA:\n      a: L\n      B: {write: b, L}\n      ' ': {R: eachA}\n\n    scan:\n      [b,C]: R\n      ' ': {R: accept}\n    accept:\npositions:\n  start:  {x: 180, y: 40}\n  a+:     {x: 180, y: 180}\n  b+:     {x: 180, y: 320}\n  c+:     {x: 180, y: 460}\n  left:   {x: 290, y: 320}\n\n  accept: {x: 400, y: 40}\n  eachA:  {x: 400, y: 180}\n  eachB:  {x: 400, y: 320}\n  markC:  {x: 400, y: 460}\n\n  scan:   {x: 560, y: 180}\n  nextA:  {x: 560, y: 320}\n  nextB:  {x: 560, y: 460}\n"},function(e,t){e.exports="name: equal strings\nsource code: |\n  # Decides the language { w#w | w ∈ {0,1}* }\n  # (two equal binary strings separated by '#')\n  input: '01001#01001' # try '#', '1#10', '10#1', '10#10'\n  blank: ' '\n  # Two strings are equal if they are both the empty string,\n  # or they start with the same symbol and are equal thereafter.\n  start state: start\n  table:\n    start:\n      # Inductive case: start with the same symbol.\n      0: {write: ' ', R: have0}\n      1: {write: ' ', R: have1}\n      # Base case: empty string.\n      '#': {R: check}\n    have0:\n      [0,1]: R\n      '#': {R: match0}\n    have1:\n      [0,1]: R\n      '#': {R: match1}\n    match0:\n      x: R\n      0: {write: x, L: back}\n    match1:\n      x: R\n      1: {write: x, L: back}\n    back:\n      [0,1,'#',x]: L\n      ' ': {R: start}\n    check:\n      x: R\n      ' ': {R: accept}\n    accept:\n\n\n  # Exercises:\n\n  # • Accept if the second string is the bitwise complement\n  #   (1s and 0s swapped) of the first, e.g. accept '1101#0010'.\n\n  # • Check that a binary string has the same number of 0s and 1s;\n  #   eg., accept '001110' but reject '10010'.\n\n  # • Check if two strings are different.\n  #   Example: accept '00#001' and '0101#0111', but reject '1001#1001'.\npositions:\n  accept: {x: 80 , y: 250}\n  check:  {x: 190, y: 250}\n  # regular hexagon with side length 150\n  start:  {x: 300, y: 250}\n  back:   {x: 600, y: 250}\n  have1:  {x: 375, y: 120.10}\n  match1: {x: 525, y: 120.10}\n  have0:  {x: 375, y: 379.90}\n  match0: {x: 525, y: 379.90}\n"},function(e,t){e.exports="name: three equal lengths\nsource code: |\n  # Decides the language { aⁿbⁿcⁿ | n ≥ 1 }, that is,\n  # accepts a's followed by b's then c's of the same length.\n  input: aabbcc # try bac, aabc, aabcc, aabcbc\n  blank: ' '\n  # Mark the first a, b, and c on each pass (by capitalizing them).\n  # All a's must precede all b's, which must precede all c's.\n  # When there are no more a's,\n  # all input symbols should have been marked.\n  start state: qA\n  table:\n    qA:\n      a: {write: A, R: qB}\n      B: {R: scan}\n    qB:\n      [a,B]: R\n      b: {write: B, R: qC}\n    qC:\n      [b,C]: R\n      c: {write: C, L: back}\n    back:\n      [a,B,b,C]: L\n      A: {R: qA}\n    scan:\n      [B,C]: R\n      ' ': {R: accept}\n    accept:\n\n\n  # Exercises:\n\n  # • Suppose a ledger starts from 0 and gains one dollar for each +\n  #   and loses one for each -. Reading left to right,\n  #   check that the account never goes into the negative.\n  #   Examples: accept '+-++' and '++-+--', reject '-++' and '++---+'.\n\n  # • Check parentheses for proper nesting,\n  #   e.g. accept '()(()()())' but reject '(()))(' and '(()('.\npositions:\n  qA: {x: 240, y: 250}\n  qB: {x: 400, y: 250}\n  qC: {x: 560, y: 250}\n  back:   {x: 400, y: 370}\n  scan:   {x: 320, y: 150}\n  accept: {x: 480, y: 150}\n"},function(e,t){e.exports="name: multitape\nsource code: |\n  # Adds 1 to a binary number. Prints which bits changed on the second tape\n  input:\n    - '1011'\n    - '0000'\n  tapes: 2\n  blank: ' '\n  start state: right\n  table:\n    # scan to the rightmost digit\n    right:\n      10,00: 1R 2R\n      '  ' : carry 1L 2L\n    # then carry the 1\n    carry:\n      10      : 1L0 2L1\n      '00,  ' : done 1L1 2L1\n    done:\n\npositions:\n  right: {x: 230, y: 250}\n  carry: {x: 400, y: 250}\n  done: {x: 570, y: 250}\n"},function(e,t){e.exports="name: palindrome\nsource code: |\n  # Accepts palindromes made of the symbols 'a' and 'b'\n  input: 'abba' # try a, ab, bb, babab\n  blank: ' '\n  start state: start\n  synonyms:\n    accept: {R: accept}\n    reject: {R: reject}\n  # A palindrome is either the empty string, a single symbol,\n  # or a (shorter) palindrome with the same symbol added to both ends.\n  table:\n    start:\n      a: {write: ' ', R: haveA}\n      b: {write: ' ', R: haveB}\n      ' ': accept # empty string\n    haveA:\n      [a,b]: R\n      ' ': {L: matchA}\n    haveB:\n      [a,b]: R\n      ' ': {L: matchB}\n    matchA:\n      a: {write: ' ', L: back} # same symbol at both ends\n      b: reject\n      ' ': accept # single symbol\n    matchB:\n      a: reject\n      b: {write: ' ', L: back} # same symbol at both ends\n      ' ': accept # single symbol\n    back:\n      [a,b]: L\n      ' ': {R: start}\n    accept:\n    reject:\n\n\n  # Exercise:\n\n  # • Modify the machine to include 'c' in the symbol alphabet,\n  #   so it also works for strings like 'cabbac'.\npositions:\n  haveA:  {x: 240, y: 185}\n  start:  {x: 400, y: 185}\n  haveB:  {x: 560, y: 185}\n\n  matchA: {x: 240, y: 315}\n  back:   {x: 400, y: 315}\n  matchB: {x: 560, y: 315}\n\n  accept: {x: 400, y: 55}\n  reject: {x: 400, y: 445}\n"},function(e,t){e.exports="name: powers of two\nsource code: |\n  # Matches strings of 0s whose length is a power of two.\n\n  # This example comes from the textbook\n  #   \"Introduction to the Theory of Computation\" (3rd edition, 2012)\n  #   by Michael Sipser\n  # The states have been renamed (from q1, q2, etc.)\n  # to make it easier to understand.\n  input: '0000' # try '0', '000', '00000000'\n  blank: ' '\n  start state: zero\n  synonyms:\n    accept: {R: accept}\n    reject: {R: reject}\n  # The idea: divide the length by 2 repeatedly until it reaches 1.\n\n  # To do this, cross off every other 0, one pass at a time.\n  # If any pass reads an odd number of 0s (a remainder), reject right away.\n  # Otherwise if every pass halves the length cleanly,\n  # the length must be a power of two (1*2^n for n ≥ 0).\n\n  # Note that since the first 0 is never crossed off, we can simply\n  # erase it on the first pass and start the count from 1 from then on.\n  table:\n    zero:\n      0  : {write: ' ', R: one}\n      ' ': reject\n    # Base case: accept length of 1 = 2^0.\n    one:\n      0  : {write: x, R: even}\n      ' ': accept\n      x  : R\n    # Inductive case: divide by 2 and check for no remainder.\n    even:\n      0  : {R: odd}\n      ' ': {L: back} # return for another pass\n      x  : R\n    odd: # odd and > 1\n      0  : {write: x, R: even}\n      ' ': reject # odd number of 0s on this pass\n      x  : R\n    back:\n      ' ': {R: one}\n      [0,x]: L\n    accept:\n    reject:\npositions:\n  zero:   {x: 200, y: 200}\n  one:    {x: 400, y: 200}\n  even:   {x: 600, y: 200}\n\n  odd:    {x: 600, y: 385}\n  back:   {x: 500, y: 125}\n  accept: {x: 400, y: 300}\n  reject: {x: 200, y: 385}\n"},function(e,t){e.exports="name: repeat 0 1\nsource code: |\n  # This is the first example machine given by Alan Turing in his 1936 paper\n  #   \"On Computable Numbers, with an Application to\n  #    the Entscheidungsproblem\".\n  # It simply writes the endless sequence 0 1 0 1 0 1...\n  blank: ' '\n  start state: b\n  table:\n    b:\n      ' ': {write: 0, R: c}\n    c:\n      ' ':           {R: e}\n    e:\n      ' ': {write: 1, R: f}\n    f:\n      ' ':           {R: b}\n\n\n  # (Turing uses the convention of leaving a gap after each output cell,\n  # reserving it for marking the cell. For instance, on a tape that\n  # contains '0 1x0 0 1 1y1y0y', x marks the leftmost 1 and y marks 110.)\npositions:\n  b: {x: 300, y: 200, fixed: false}\n  c: {x: 450, y: 150, fixed: false}\n  e: {x: 500, y: 300, fixed: false}\n  f: {x: 350, y: 350, fixed: false}\n"},function(e,t){e.exports="name: Shennon 1\nsource code: |\n  #Теорема  Шеннона №1\n\n  # Всякая машина Тьюринга А может быть преобразована в эквивалентную машину\n  # не более чем с двумя внутренними состояниями.\n\n  # Доказательством теоремы будет схема построения такой машины. Причем строить будем, по сути, универсальную машину Тьюринга, использующую одну ленту и имеющую лишь два внутренних состояния, которая сможет моделировать работу любой машины Тьюринга.\n\n  # Общая идея построения\n\n  # В общих чертах метод построения таков. Для произвольной машины Тьюринга А с алфавитом из m букв (символов, записываемых на ленте, включая пустой символ) и с n внутренними состояниями мы построим машину В с двумя внутренними состояниями и алфавитом не более чем из 4mn+m символов. Машина В будет работать, по существу, так же, как и машина А. Во всех клетках ленты, кроме воспринимаемого считывающей головкой и одного смежного с ним, на ленте машины В записано то же, что и на ленте машины А в соответствующие такты работы двух машин.\n\n  # Машина В моделирует поведение машины А, но хранит информацию о внутреннем состоянии машины А с помощью символов, записанных в клетке под считывающей головкой, и в клетке, которую считывающая головка машины А собирается посетить. Основная задача — своевременно освежать эту информацию и держать ее под считывающей головкой. Если последняя передвигается, то информацию о состоянии надо перенести в новый квадрат, используя всего два внутренних состояния машины В. Пусть, например, следующим состоянием машины А должно быть состояние 17 (согласно какой-нибудь системе счисления). Чтобы перенести его символ, считывающая головка \"качается\" вперед - назад между старой и новой клеткой 17 раз (точнее 18 раз в новую клетку и 17 раз назад в старую). В течение этого процесса символ, стоящий в новой клетке, пробегает своего рода последовательность счета, которая оканчивается символом, соответствующим состоянию 17 и в то же время сохраняющим информацию о предыдущем символе в этой клетке. Процесс качания возвращает также старую клетку к одному из элементарных символов (находящихся во взаимно однозначном соответствии с символами, используемыми машиной А), а именно к тому элементарному символу, который должен быть записан в этой клетке после окончания данной операции.\n\n  # Два состояния машины В назовем α и β. Эти состояния используются двояко. Во-первых, при первом шаге качания они переносят в ближайшую подлежащую посещению клетку информацию о том, вправо (α) или влево (β) от новой клетки лежит старая клетка. Эта информация нужна в новой клетке, чтобы управляющий элемент передвинул считывающую головку назад в нужном направлении. После первого шага информация об этом сохраняется в новой клетке с помощью записанного там символа (последний индекс у). Во-вторых, состояния α и β используются, чтобы сообщить из старой клетки в новый o факте окончания качания. После первого шага качания состояние β переносится в новую клетку вплоть до конца качания, когда переносится α. Это означает конец операции, и новая клетка начинает затем действовать как передатчик и управляет следующим шагом вычисления.\n\n  # Пусть машина А содержит:\n  #     - m символов внешнего алфавита a1,…,j,…,m,\n  #     - n внутренних состояний S1,…,i,…,n,\n  # Тогда машина В будет содержать:\n  #     - два  внутренних состояния α и β,\n  #     - m обычных символов внешнего алфавита bi , являющихся аналогами ai,\n  #     - 4mn особенных символов b, за счет которых производится расширение         внутренней памяти.\n\n\n  #   Задача:\n  # Если в конце слова встретилось 2 единицы подряд или больше, то стереть последнюю\n\n  input: \n   - 'δ101110110λλλ' # как выполняются команды на обысной машине Тьюринга\n   - 'δ101110110λλλ' # как выполняются команды на аналогичной МТ, имеющей всего 2 внутр.состояния\n   - '000000000000' #i - номер ленточного символа\n   - '000000000000' #j - номер внутреннего состояния машины\n   - '000000000000' #+/- - назначение (роль) клетки: если клетка передает информацию во время «качания», то х = ”+”, а если получает – то х = ”-”. Сами клетки назовем соответственно: передатчик / приёмник.\n   - '000000000000' #R/L положение другой особой клетки (машина В не может запомнить откуда она ушла): в зависимости от того, вправо или влево от воспринимаемой клетке должна передвинуться считывающая головка при качании, y = R или L.\n   \n  tapes: 6\n  blank: ' '\n  start state: alpha\n  table:\n    # \n    alpha:\n      #S0.δ -> δ.R.alpha\n      'δδ0000': beta 1R 2R 3R 4R1 5R+ 6RR\n      '1δ01+R,0δ01+R': 2R 3R0 4R0 5R0 6R0 \n      #S0.1 -> 1.R.S2\n      '1111-L': beta 1R 2R 3R1 4R3 5R+ 6RR\n      'λ113+R,0113+R,1113+R': beta 2R1 3R1 4R2 5R+ 6RR\n      'λ112+R,0112+R,1112+R': beta 2R1 3R1 4R1 5R+ 6RR\n      'λ111+R,0111+R,1111+R': alpha 2R 3R0 4R0 5R0 6R0\n      \n      #S0.0 -> 0.R.S1\n      '0001-L': beta 1R 2R 3R0 4R2 5R+ 6RR\n      'λ002+R,0002+R,1002+R': beta 2R 3R0 4R1 5R+ 6RR\n      'λ001+R,0001+R,1001+R': alpha 2R 3R0 4R0 5R0 6R0\n      \n      #S0.λ -> λ.H.done\n      'λλ0000': done\n      \n      #S1.0 -> 0.R.S1\n      '0002-L': beta 1R 2R 3R 4R2 5R+ 6RR\n      #S1.1 -> 1.R.S2\n      '1112-L': beta 1R 2R 3R 4R3 5R+ 6RR\n      \n      #S1.λ -> λ.H.done\n      'λλλ2-L': done 3L0 4L0 5L0 6L0\n      \n      #S2.0 -> 0.R.S1\n      '0003-L': beta 1R 2R 3R 4R2 5R+ 6RR\n      \n      #S2.1 -> 1.R.S3\n      '1113-L': beta 1R 2R 3R 4R4 5R+ 6RR\n      '0114+R,1114+R,λ114+R': beta 2R 3R 4R3 5R 6R\n      \n      #S2.λ -> λ.H.done\n      'λλλ3-L': done 3L0 4L0 5L0 6L0\n      \n      #S3.1 -> 1.R.S3\n      '1114-L': beta 1R 2R 3R 4R 5R+ 6RR\n      #S3.0 -> 0.R.S1\n      '0004-L': beta 1R 2R 3R 4R2 5R+ 6RR\n      \n      #S3.λ -> λ.L.S4\n      'λλλ4-L': alpha 1L 2L 3L 4L5 5L+ 6LL\n      '110000': beta 2R 3R1 4R1 5R- 6RR\n      '1111-R': beta 2R 3R 4R2 5R 6R\n      '1112-R': beta 2R 3R 4R3 5R 6R\n      '1113-R': beta 2R 3R 4R4 5R 6R\n      '1114-R': beta 2R 3R 4R5 5R 6R\n      '1115-R': done 1Lλ 2Lλ 3L0 4L0 5L0 6L0\n      \n      \n\n    beta:\n      \n      # gets the states for 1\n      '110000': alpha 2L 3L1 4L1 5L- 6LL\n      '1111-L': alpha 2L 3L1 4L2 5L- 6LL\n      '1112-L': alpha 2L 3L1 4L3 5L- 6LL\n      '1113-L': alpha 2L 3L1 4L4 5L- 6LL\n      #for 0\n      '000000': alpha 2L 3L0 4L1 5L- 6LL\n      '0001-L': alpha 2L 3L0 4L2 5L- 6LL\n      '0002-L': alpha 2L 3L0 4L3 5L- 6LL\n      '0003-L': alpha 2L 3L0 4L4 5L- 6LL\n      # for λ\n      'λλ0000': alpha 2L 3Lλ 4L1 5L- 6LL\n      'λλλ1-L': alpha 2L 3Lλ 4L2 5L- 6LL\n      'λλλ2-L': alpha 2L 3Lλ 4L3 5L- 6LL\n      'λλλ3-L': alpha 2L 3Lλ 4L4 5L- 6LL\n      \n      # for end\n      '1λλ5+L': alpha 2L 3L 4L4 5L 6L\n      '1λλ4+L': alpha 2L 3L 4L3 5L 6L\n      '1λλ3+L': alpha 2L 3L 4L2 5L 6L\n      '1λλ2+L': alpha 2L 3L 4L1 5L 6L\n      '1λλ1+L': alpha 2L 3L0 4L0 5L0 6L0\n    done:\n    \npositions:\n  alpha: {x: 440, y: 277.13}\n  beta: {x: 320, y: 277.13}\n  done: {x: 560, y: 277.13}\n"},function(e,t){e.exports="name: unary multiplication\nsource code: |\n  # Multiplies together two unary numbers separated by a '*'.\n  # (Unary is like tallying. Here '||*|||' means 2 times 3.)\n  input: '||*|||' # try '*', '|*|||', '||||*||'\n  blank: ' '\n\n  # The idea:\n  #   multiply(0, b) = 0\n  #   multiply(a, b) = b + multiply(a-1, b)   when a > 0\n  start state: eachA\n  table:\n    # For each 1 in a, add a copy of b.\n    eachA:\n      '|': {write: ' ', R: toB}  # Inductive case: a > 0.\n      '*': {R: skip}             # Base case:      a = 0.\n    toB:\n      '|': R\n      '*': {R: eachB} # enter copier\n    nextA: # return from copier\n      ' ': {write: '|', R: eachA}\n      ['|','*']: L\n\n    skip:\n      '|': R\n      ' ': {R: done}\n    done:\n\n    # This is the 'copy 1s' machine, with ' ' as 0 and '|' as 1.\n    eachB:\n      ' ': {L: nextA}\n      '|': {write: ' ', R: sep}\n    sep:\n      ' ': {R: add}\n      '|': R\n    add:\n      ' ': {write: '|', L: sepL}\n      '|': R\n    sepL:\n      ' ': {L: nextB}\n      '|': L\n    nextB:\n      ' ': {write: '|', R: eachB}\n      '|': L\n\npositions:\n  eachA:  {x: 400, y:  50}\n  toB:    {x: 400, y: 150}\n  eachB:  {x: 400, y: 250}\n  sep:   {x: 400, y: 350}\n  add:   {x: 400, y: 450}\n\n  sepL:  {x: 280, y: 350}\n  nextB:  {x: 280, y: 250}\n\n  nextA:  {x: 280, y: 90}\n  skip:   {x: 520, y: 90}\n  done:   {x: 520, y: 190}\n"},function(e,t){e.exports="name: Universal TM\nsource code: \"# Универсальная машина Тьюринга эмулирует обыкновенную машину Тьюринга\\r\\n# путем чтения закодированной таблицы состояний, поиска необходимой интрукции\\r\\n# и её исполнения\\r\\n# В данной универсальной машине символы кодируются числом 1 в унарном коде,\\r\\n# состояния - числом 2, а команды R, L и H - числами 3, 33 и 333\\r\\n# соответсвенно.\\r\\n# Если в конце инструкции встречается 3333, то машина останавливается,\\r\\n# считая, что это состояние - конечное\\r\\n# Начало каждой ленты отмечено символом '>'.\\r\\n# На первую ленту подается закодированная таблица инструкций,\\r\\n# на второй написано начальное состояние,\\r\\n# на третьей - закодированная входная лента исходной машины.\\r\\n# На входной ленте символы закодированы как и на первой, а также разделены\\r\\n# символом ';'\\r\\n# \\r\\n# Инструкции обычной машины Тьюринга записываются следующим образом:\\r\\n#     S1 a -> b S2 R/L/H\\r\\n# Каждая инструкция кодируется следующим образом:\\r\\n#   - инструкция записывается в следующем виде:\\r\\n#         a S1 b S2 R/L/H\\r\\n#   - если S2 - конечное состояние, то вместо R, L или H записывается 3333\\r\\n#   - каждый элемент инструкции кодируется унарным кодом как написано выше,\\r\\n#   - и они записываются подряд без разделителей\\r\\n# Все закодированные инструкции также пишутся подряд без разделителей\\r\\n# \\r\\n# Данная универсальная машина рассматривает нулевой символ, записанный\\r\\n# одной единицей, как пустой символ - лямбда \\r\\n#     (при добавлении нового символа в конец рабочей ленты)\\r\\n# \\r\\n# \\r\\n# Для эмуляции каждого такта УМТ делает следующее:\\r\\n#   - Поиск необходимой инструкции:\\r\\n#       - Посимвольное сравнение текущего символа и символа в инструкции\\r\\n#       - Посимвольное сравнение текущего состояние и состояния на 2 ленте\\r\\n#       - При несовпадении хотя бы одного из этих условий машина переходит\\r\\n#         к следующей инструкции и начинает поиск заново\\r\\n#   - Запись символа на рабочую ленту:\\r\\n#       - При необходимости расширяет или уменьшает текущий символ,\\r\\n#         сдвигая все символы справа от него.\\r\\n#         Для этого машина использует вторую ленту чтобы не сдвигать\\r\\n#         рабочую ленту по одному символу\\r\\n#   - Запись нового состояния на вторую ленту\\r\\n#   - Переход по рабочей ленте вправо или влево\\r\\n#       - При переходе направо добавляет пустой символ в конец если \\r\\n#         на ленте больше нет символов\\r\\n#\\r\\ninput:\\r\\n  - '>112211223111122111122312212223311222111123333111122211222331222111123333'\\r\\n  - '>22'\\r\\n  - '>;11;1111;11;1111;1111;'\\r\\ntapes: 3\\r\\nblank: ' '\\r\\nstart state: start\\r\\ntable:\\r\\n  error:\\r\\n  end:\\r\\n  start:\\r\\n    '>>>': 1R 2R 3R   # первый шаг\\r\\n    '>>;': 1R 2R      # начало очередного цикла\\r\\n    12;: match 3R     # переход на первую 1 символа и начало поиска\\r\\n  match: # поиск совпадений по символу\\r\\n    121: 1R 3R       \\r\\n    221,12;: skip1 3L # неверный символ\\r\\n    22;: found1\\r\\n  skip1: # переход до конца текущей конфигурации,\\r\\n         # переход на начало 2 ленты и на начало текущего символа\\r\\n    221: 1R 2L 3L\\r\\n    121: 1R 2L 3L\\r\\n    321:    2L 3L\\r\\n    2>1: 1R    3L\\r\\n    1>1: 1R    3L\\r\\n    3>1:       3L\\r\\n    22;: 1R 2L\\r\\n    12;: 1R 2L\\r\\n    32;:    2L\\r\\n    2>;: 1R\\r\\n    1>;: 1R\\r\\n    3>;: skip2\\r\\n  skip2: # переход на следующую конфигурацию и начало нового поиска\\r\\n    3>;: 1R\\r\\n    1>;: match 2R 3R\\r\\n    \\r\\n  found1: # совпадение символа, поиск совпадения состояния\\r\\n    22;:       3L\\r\\n    221: 1R 2R\\r\\n    121: skip1     # неверное состояние\\r\\n    2 1: skip1  2L # неверное состояние\\r\\n    1 1: found2 2L # верное состояние\\r\\n  found2: # конфигурация найдена,\\r\\n          # переход на начало 2 ленты и на начало текущего символа\\r\\n    121: 2L 3L\\r\\n    12;: 2L\\r\\n    1>1:    3L\\r\\n    1>;: write1 3R\\r\\n  write1: # запись символа\\r\\n    1>1: 1R 3R  # посимвольное сравнение\\r\\n    1>;: extend # увеличение символа\\r\\n    2>1: shrink # уменьшение символа\\r\\n    2>;: write2 # символы одинаковые\\r\\n  write2:\\r\\n    2>;:    2R 3L # setup\\r\\n    221: 1R 2R    # посимвольное сравнение состояний\\r\\n    2 1: 1R 2R2   # увеличить состояние\\r\\n    321:    2R_   # уменьшить состояние\\r\\n    3 1: right 1R\\r\\n    \\r\\n  right: # движение по выходной ленте\\r\\n    1 1,  1: goright # '3', движение направо\\r\\n    3 1: left 1R     # '33'\\r\\n  left:\\r\\n    1 1,  1: goleft  # '33', движение налево\\r\\n    3 1: hold 1R     # '333', недвижение\\r\\n  hold:\\r\\n    1 1,  1: gohold  # '333', недвижение\\r\\n    3 1: end       # '3333', конечное состоние\\r\\n  goright:\\r\\n    1 1: 3R        # движение направо до разделителя\\r\\n    1 ;: append 3R\\r\\n  append: # добавление '1;' в конец\\r\\n    '1 1': back 3L     # добавлять не нужно\\r\\n    '1  ': append2 3R1 # добавляем '1'\\r\\n  append2:\\r\\n    '1  ': gohold 3L;  # добавляем ';', идем до предыдущего разделителя\\r\\n  goleft:\\r\\n    1 1: 3L        # доходим до текущего разделителя\\r\\n    1 ;: gohold 3L # и потом до предыдущего\\r\\n  gohold:\\r\\n    1 1: 3L    # идем до разделителя\\r\\n    1 >: error # если после goleft попали на >\\r\\n    1 ;: back  # дошли\\r\\n  \\r\\n    \\r\\n  back:          # откатываем 1 и 2 ленты назад\\r\\n    '> ;':    2L\\r\\n    '  ;': 1L 2L\\r\\n    '1 ;': 1L 2L\\r\\n    '2 ;': 1L 2L\\r\\n    '3 ;': 1L 2L\\r\\n    '>2;':    2L\\r\\n    '12;': 1L 2L\\r\\n    '22;': 1L 2L\\r\\n    '32;': 1L 2L\\r\\n    '1>;': 1L\\r\\n    '2>;': 1L\\r\\n    '3>;': 1L\\r\\n    '>>;': start\\r\\n    \\r\\n  extend:  # увеличить символ\\r\\n    1>;:    2R  # в конец 2 ленты\\r\\n    12;:    2R\\r\\n    1 ;: 1R 2R  # под единичками которые нужно добавить создаются пустые\\r\\n    1 1: 1R 2R  # символы\\r\\n    2 ;:    2R; 3R  # копирование на 2 ленту\\r\\n    2 1:    2R1 3R\\r\\n    '1  ': 1R 3R\\r\\n    '2  ': extb 2L 3L\\r\\n  extb:  # движение до конца двоек на 2 ленте\\r\\n    '2  ': 2L 3L\\r\\n    '211': 2L 3L\\r\\n    '2;;': 2L 3L\\r\\n    '2 1': 2L    # сдвиг только 2 ленты на необходимое число символов\\r\\n    '221': extc 2R 3R\\r\\n  extc:  # копирование со 2 ленты обратно на 3 и удаление со 2\\r\\n    '2; ': 2R_ 3R;\\r\\n    '2;1': 2R_ 3R;\\r\\n    '2;;': 2R_ 3R;\\r\\n    '21 ': 2R_ 3R1\\r\\n    '211': 2R_ 3R1\\r\\n    '21;': 2R_ 3R1\\r\\n    '2 1': 2R  3R1\\r\\n    '2 ;': 2R  3R1\\r\\n    '2  ': extcb 2L 3L\\r\\n  extcb:  # возврат к текущему символу на 3 ленте и к началу 2\\r\\n    2 1: 2L 3L\\r\\n    2 ;: 2L 3L\\r\\n    221: 2L 3R\\r\\n    22;: 2L \\r\\n    2>1:    3R\\r\\n    2>;: write2\\r\\n    \\r\\n  shrink:  # уменьшить символ\\r\\n    2>1:     3R2  # пометить 2 единички которые нужно удалить\\r\\n    2>;: 2R     # переход к концу второй ленты\\r\\n    22;: 2R\\r\\n    2 1: 2R1 3R # копирование на 2 ленту\\r\\n    2 ;: 2R; 3R\\r\\n    '2  ': shrb 2L 3L\\r\\n  shrb:  # переход назад\\r\\n    211: 2L 3L  # переход до первой '2' на 2 ленте\\r\\n    2;;: 2L 3L\\r\\n    222: 3L     # пропуск двоек на 3 ленте\\r\\n    221: shrc 2R 3R\\r\\n  shrc:  # копирование со 2 ленты обратно на 3 и удаление со 2\\r\\n    2;1: 2R_ 3R;\\r\\n    2;2: 2R_ 3R;\\r\\n    2;;: 2R_ 3R;\\r\\n    211: 2R_ 3R1\\r\\n    212: 2R_ 3R1\\r\\n    21;: 2R_ 3R1\\r\\n    2 1: 2R  3R_\\r\\n    2 2: 2R  3R_\\r\\n    2 ;: 2R  3R_\\r\\n    '2  ': shrcb 2L 3L\\r\\n  shrcb:  # возврат к текущему символу на 3 ленте и к началу 2\\r\\n    '2  ': 2L 3L\\r\\n    '2 1': 2L 3L\\r\\n    '2 ;': 2L 3L\\r\\n    221: 2L 3R\\r\\n    22;: 2L\\r\\n    2>1:    3R\\r\\n    2>;: write2\\r\\n\\r\\n\\r\\nvis:\\r\\n  error:\\r\\n    color: FF4040\\r\\n  start:\\r\\n    color: 2CA02C\\r\\n  match:\\r\\n    color: 2CA02C\\r\\n    1,3:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 1\\r\\n      color: green\\r\\n  skip1:\\r\\n    color: FF7F0E\\r\\n    1:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: 3\\r\\n      color: red\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: '>'\\r\\n      color: red\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: ;\\r\\n      color: red\\r\\n  skip2:\\r\\n    color: FF7F0E\\r\\n    1:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: 1\\r\\n      color: red\\r\\n  found1:\\r\\n    color: 2CA02C\\r\\n    1,2:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 2\\r\\n      color: green\\r\\n  found2:\\r\\n    color: 2CA02C\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: '>'\\r\\n      color: blue\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: ;\\r\\n      color: blue\\r\\n  write1:\\r\\n    color: 17BECF\\r\\n    1,3:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 1\\r\\n      color: green\\r\\n  write2:\\r\\n    color: 17BECF\\r\\n    1,2:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 2\\r\\n      color: green\\r\\n  right:\\r\\n    color: 1F77B4\\r\\n    1:\\r\\n      mode: row\\r\\n      dir: <-\\r\\n      chars: 3\\r\\n      color: green\\r\\n  left:\\r\\n    color: 1F77B4\\r\\n    1:\\r\\n      mode: row\\r\\n      dir: <-\\r\\n      chars: 3\\r\\n      color: green\\r\\n  hold:\\r\\n    color: 1F77B4\\r\\n    1:\\r\\n      mode: row\\r\\n      dir: <-\\r\\n      chars: 3\\r\\n      color: green\\r\\n  goright:\\r\\n    color: 17BECF\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: ;\\r\\n      color: blue\\r\\n  goleft:\\r\\n    color: 17BECF\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: ;\\r\\n      color: blue\\r\\n      skip: 1\\r\\n  gohold:\\r\\n    color: 17BECF\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: ;\\r\\n      color: blue\\r\\n  append:\\r\\n    color: BCBD22\\r\\n  append2:\\r\\n    color: BCBD22\\r\\n  end:\\r\\n    color: 7F7F7F\\r\\n      \\r\\n  back:\\r\\n    color: FF7F0E\\r\\n    1,2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: '>'\\r\\n      color: blue\\r\\n    \\r\\n  extend:\\r\\n    color: 9467BD\\r\\n    1:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 1\\r\\n      color: red\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: ' '\\r\\n      color: red\\r\\n  extb:\\r\\n    color: 9467BD\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: 2\\r\\n      color: blue\\r\\n  extc:\\r\\n    color: 9467BD\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: ' '\\r\\n      color: red\\r\\n  extcb:\\r\\n    color: 9467BD\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: '>'\\r\\n      color: blue\\r\\n    \\r\\n  shrink:\\r\\n    color: E377C2\\r\\n    1:\\r\\n      mode: row\\r\\n      dir: ->\\r\\n      chars: 1\\r\\n      color: red\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: ' '\\r\\n      color: red\\r\\n  shrb:\\r\\n    color: E377C2\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: 2\\r\\n      color: blue\\r\\n  shrc:\\r\\n    color: E377C2\\r\\n    3:\\r\\n      mode: find\\r\\n      dir: ->\\r\\n      chars: ' '\\r\\n      color: red\\r\\n  shrcb:\\r\\n    color: E377C2\\r\\n    2:\\r\\n      mode: find\\r\\n      dir: <-\\r\\n      chars: '>'\\r\\n      color: blue\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\npositions:\n  error: {x: 420, y: 34.64}\n  end: {x: 500, y: 34.64}\n  start: {x: 300, y: 103.92}\n  match: {x: 260, y: 173.21}\n  skip1: {x: 180, y: 173.21}\n  skip2: {x: 220, y: 103.92}\n  found1: {x: 220, y: 242.49}\n  found2: {x: 260, y: 311.77}\n  write1: {x: 300, y: 381.05}\n  write2: {x: 620, y: 381.05}\n  right: {x: 620, y: 242.49}\n  left: {x: 580, y: 173.21}\n  hold: {x: 540, y: 103.92}\n  goright: {x: 540, y: 242.49}\n  append: {x: 460, y: 242.49}\n  append2: {x: 420, y: 173.21}\n  goleft: {x: 500, y: 173.21}\n  gohold: {x: 460, y: 103.92}\n  back: {x: 380, y: 103.92}\n  extend: {x: 340, y: 450.33}\n  extb: {x: 420, y: 450.33}\n  extc: {x: 500, y: 450.33}\n  extcb: {x: 580, y: 450.33}\n  shrink: {x: 340, y: 311.77}\n  shrb: {x: 420, y: 311.77}\n  shrc: {x: 500, y: 311.77}\n  shrcb: {x: 580, y: 311.77}\n"},function(e,t,n){"use strict";var r=n(16).KeyValueStorage,o=n(22),a=n(0),i=n(1).defaults;function s(e){var t=e.menu,n=e.group||t,i=e.storagePrefix,s=e.firsttimeDocID;if(!t)throw new TypeError("DocumentMenu: missing parameter: menu element");if(!i)throw new TypeError("DocumentMenu: missing parameter: storage prefix");e.makeOption&&(this.optionFromDocument=e.makeOption),this.menu=t,this.group=n,this.group.innerHTML="",this.__storagePrefix=i,this.doclist=new c(i+".list"),this.render(),this.selectDocID(this.getSavedCurrentDocID()||s);var l=this;this.menu.addEventListener("change",(function(){l.onChange(l.currentDocument,{type:"open"})})),r.addStorageListener((function(e){var t,n,r;e.key===l.doclist.storageKey?(l.doclist.readList(),l.render()):(t=o.IDFromNameStorageKey(e.key))&&(n=l.findOptionByDocID(t))&&(n.parentNode.replaceChild(r=l.optionFromDocument(new o(t)),n),r.selected=n.selected,a.select(r).datum(a.select(n).datum()))}))}function c(e){this.storageKey=e,this.readList()}Object.defineProperties(s.prototype,{currentOption:{get:function(){return this.menu.options[this.menu.selectedIndex]},enumerable:!0},currentDocument:{get:function(){var e=this.currentOption;return e?new o(e.value):null},enumerable:!0}}),s.prototype.render=function(){var e=this.currentOption?this.currentOption.value:null,t=a.select(this.group).selectAll("option").data(this.doclist.list,(function(e){return e.id}));t.exit().remove();var n=this;t.enter().insert((function(e){return n.optionFromDocument(new o(e.id))})),this.currentOption.value!==e&&(this.selectDocID(this.getSavedCurrentDocID(),{type:"delete"})||this.onChange(this.currentDocument,{type:"delete"}))},s.prototype.findOptionByDocID=function(e){return this.menu.querySelector('option[value="'+e.replace(/"/g,'\\"')+'"]')},s.prototype.selectDocID=function(e,t){try{this.findOptionByDocID(e).selected=!0}catch(e){return!1}return this.onChange(this.currentDocument,t),!0},s.prototype.saveCurrentDocID=function(){var e=this.currentOption&&this.currentOption.value;e&&r.write(this.__storagePrefix+".currentDocID",e)},s.prototype.getSavedCurrentDocID=function(){return r.read(this.__storagePrefix+".currentDocID")},s.prototype.optionFromDocument=function(e){var t=document.createElement("option");return t.value=e.id,t.text=e.name||"untitled",t},s.prototype.onChange=function(){},s.prototype.__prepend=function(e,t){var n=this.optionFromDocument(e);return this.group.insertBefore(n,this.group.firstChild),t&&t.select&&(this.menu.selectedIndex=n.index,this.onChange(e,t)),e},s.prototype.newDocument=function(e){return this.__prepend(this.doclist.newDocument(),i({type:"open"},e))},s.prototype.duplicate=function(e,t){return this.__prepend(this.doclist.duplicate(e),i({type:"duplicate"},t))},s.prototype.rename=function(e){this.currentDocument.name=e,this.currentOption.text=e},s.prototype.delete=function(e){this.currentDocument.delete();var t=this.menu.selectedIndex,n=this.doclist.deleteIndex(t);return n&&(this.currentOption.remove(),this.menu.selectedIndex=t,this.onChange(this.currentDocument,i({type:"delete"},e))),n},c.newID=function(){return String(Date.now())},c.prototype.add=function(e){this.__list.unshift({id:e}),this.writeList()},c.prototype.readList=function(){this.__list=JSON.parse(r.read(this.storageKey))||[]},c.prototype.writeList=function(){r.write(this.storageKey,JSON.stringify(this.__list))},c.prototype.newDocument=function(){var e=c.newID();return this.add(e),new o(e)},c.prototype.duplicate=function(e){return this.newDocument().copyFrom(e)},c.prototype.deleteIndex=function(e){var t=this.__list.splice(e,1);return this.writeList(),t.length>0},Object.defineProperties(c.prototype,{list:{get:function(){return this.__list},enumerable:!0}}),e.exports=s},function(e,t,n){"use strict";var r=n(4);function o(e){return e}function a(e){return e[0]}function i(e){this.table=e.table,this.headerRow=this.table.append("thead").append("tr"),this.tbody=this.table.append("tbody");var t=this;this.headerCheckbox=this.headerRow.append("th").attr("class","checkbox-cell").append("input").attr("type","checkbox").on("click",(function(){t.getCheckboxes().property("checked",this.checked),t.onChange()})),r(this.tbody.node()).on("click","tr",(function(e){if("INPUT"!==e.target.tagName){var n=this.querySelector('input[type="checkbox"]');n.checked=!n.checked}t.refresh(),t.onChange()})),e.headers&&this.setHeaders(e.headers),e.data&&this.setData(e.data)}i.prototype.setHeaders=function(e){var t=this.headerRow.selectAll("th:not(.checkbox-cell)").data(e);t.exit().remove(),t.enter().append("th"),t.text(o)},i.prototype.setData=function(e){var t=this.tbody.selectAll("tr").data(e,a);t.exit().remove(),t.enter().append("tr").append("td").attr("class","checkbox-cell").append("input").attr({type:"checkbox",value:a}),t.order();var n=t.selectAll("td:not(.checkbox-cell)").data(o);return n.exit().remove(),n.enter().append("td"),n.text(o),this},i.prototype.getCheckboxes=function(){return this.tbody.selectAll('input[type="checkbox"]')},i.prototype.getCheckedValues=function(){return this.tbody.selectAll('input[type="checkbox"]:checked')[0].map((function(e){return e.value}))},i.prototype.isCheckedEmpty=function(){var e=this.headerCheckbox.node();return!(e.checked||e.indeterminate)},i.prototype.refresh=function(){var e=this.headerCheckbox.node(),t=this.getCheckboxes(),n=t.size(),r=t.filter(":checked").size();0===r?e.checked=!1:r===n&&(e.checked=!0),e.indeterminate=0<r&&r<n},i.prototype.onChange=function(){},e.exports=i},function(e,t,n){"use strict";var r=n(17);t.readAsText=function(){var e=arguments;return new r((function(t,n,r){var o=new FileReader;o.addEventListener("load",(function(){t(o.result)})),o.addEventListener("error",(function(){n(o.error)})),r&&r((function(){try{o.abort()}catch(e){}})),o.readAsText.apply(o,e)}))}},function(e,t,n){"use strict";var r=n(23),o=n(6),a=n(1),i=n(0);function s(){return i.select(document.createElement("button")).attr({class:"close","aria-label":"Close"}).html('<span aria-hidden="true">&times;</span>').node()}t.init=function(e){var t=e.$dialog,n=e.gistIDForm,c=e.importArgs;function l(){t.modal("hide");var e=c.dialogNode;t.one("hidden.bs.modal",(function(){e.classList.contains("in")&&document.body.classList.add("modal-open")}))}n.addEventListener("submit",(function(e){e.preventDefault(),l();var t=n.querySelector('input[type="text"]').value;r.importGist(a.assign({gistID:t},c))})),function(){var e=document.querySelector("#importFilesPanel > .panel-body"),t=e.querySelector('input[type="file"]');document.getElementById("importFilesButton").addEventListener("click",(function(){l(),r.importLocalFiles(a.assign({files:t.files},c))}));var n=e.querySelector("textarea"),u=document.getElementById("importContentsButton");u.parentNode.style.position="relative",u.addEventListener("click",(function(t){var r,a,l,u,d;r={containers:{status:t.target.parentNode,details:e},importDocument:c.importDocument},a=n.value,l=r.containers,u=r.importDocument,d=function(){try{u(o.parseDocument(a))}catch(e){return e}}(),function(e,t){var n=i.select(e.status),r=i.select(e.details);n.selectAll('[role="alert"]').remove(),r.selectAll(".alert").remove();var a=n.append("span").attr({role:"alert"}).style({position:"absolute",left:0,width:"40%",top:"50%",transform:"translateY(-60%)"});if(t){var c=function(){var e=r.append("div").attr({role:"alert",class:"alert alert-danger"}).style("margin-top","1em");if(e.append(s).attr("data-dismiss","alert").on("click",(function(){a.remove()})),t instanceof o.YAMLException)e.append("h4").text("Not valid YAML"),e.append("pre").text(t.message);else{if(!(t instanceof o.InvalidDocumentError))return e.append("h4").text("Unexpected error"),e.append("pre").text(String(t)),"Import failed";e.append("span").text(t.message.replace(/\.?$/,"."))}return"Not a valid document"}();a.attr({class:"text-danger"}).html('<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span> '+c)}else a.attr({class:"text-success"}).html('<span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Import succeeded').transition().delay(2500).duration(2e3).style("opacity",0).remove()}(l,d),null==d&&n.select()}))}()}},function(e,t,n){"use strict";var r=n(6),o=n(24).createGist,a=n(55),i=n(4),s=!window.externalHost&&"download"in document.createElement("a"),c=function(){try{return document.queryCommandSupported("copy")}catch(e){return!1}}();function l(e){e.addEventListener("focus",(function(e){e.target.select()})),e.addEventListener("mouseup",(function(e){e.preventDefault()}))}function u(e,t,n,r){var a=t.textContent;t.textContent="Loading…",t.disabled=!0;var i={files:{},description:"Turing machine for http://turingmachine.io",public:!0};return i.files[n]={content:r},o(i).then((function(t){var n=t.id;!function(e,t){e.innerHTML='<input id="sharedPermalink" type="url" class="form-control" readonly><button type="button" class="btn btn-default" data-clipboard-target="#sharedPermalink"><span class="glyphicon glyphicon-copy" aria-hidden="true"></span></button>';var n=e.querySelector("input");n.value=t,n.size=t.length+2,l(n),n.focus()}(e,"http://turingmachine.io/?import-gist="+n)})).catch((function(e){var n=function(){var t=e.xhr;try{return"Response from GitHub: “"+t.responseJSON.message+"”"}catch(e){return t.status>0?"HTTP status code: "+t.status+" "+t.statusText:"GitHub could not be reached.\nYour Internet connection may be offline."}}();alert("Could not create new gist.\n\n"+n),t.disabled=!1,t.textContent=a}))}t.init=function(e){var t=e.$dialog,n=e.getCurrentDocument,o=e.getIsSynced,d=e.gistContainer,p=e.downloadContainer,h=e.textarea;function f(){var e,c,l,f=n(),m=f.name+".yaml",b=r.stringifyDocument(f);o()||(c=i('<div class="alert alert-warning" role="alert">The code editor has <strong>unsynced changes</strong> and might not correspond with the diagram.<br>Click <q>Load machine</q> to try to sync them. Otherwise, two sets of code will be exported.</div>').prependTo(t.find(".modal-body"))),(l=d,l.innerHTML='<button type="button" class="btn btn-default">Create permalink</button><p class="help-block">This will create and link to a new <a href="https://help.github.com/articles/creating-gists/#creating-an-anonymous-gist" target="_blank">read-only</a> GitHub gist.</p>',l.querySelector("button")).addEventListener("click",(function(t){e=u(d,t.target,m,b)})),p.appendChild(function(e,t){var n=document.createElement("a");if(n.href="data:text/x-yaml;charset=utf-8,"+encodeURIComponent(t),n.target="_blank",n.download=e,s)return n.textContent="Download document",n.className="btn btn-primary",n;n.textContent="Right-click here and choose “Save target as…” or “Download Linked File As…”";var r=document.createElement("p");return r.innerHTML=", <br>then name the file to end with <code>.yaml</code>",r.insertBefore(n,r.firstChild),r}(m,b)),h.value=b;var y=new a("[data-clipboard-target]");return y.on("success",(function(e){var t,n,r;t=e.trigger,n=i(t),r={title:"Copied!",placement:"bottom"},n.tooltip(r).tooltip("show").one("hidden.bs.tooltip",(function(){n.tooltip("destroy")})),e.clearSelection()})),function(){if(e)try{e.cancel()}catch(e){}c&&c.remove(),d.textContent="",p.textContent="",h.value="",y.destroy()}}s&&t.addClass("download-attr"),c||t.addClass("no-copycommand"),d.className="form-group form-inline",l(h),t.on("show.bs.modal",(function(){var e=f();t.one("hidden.bs.modal",e)})),t.on("shown.bs.modal",(function(){h.setSelectionRange(0,0)}))}},function(e,t){e.exports=Clipboard},function(e,t,n){"use strict";var r=n(0);function o(e){return e}function a(e){switch(e){case"Command":return"Cmd";case"Option":return"Opt";case"Up":return"↑";case"Down":return"↓";case"Left":return"←";case"Right":return"→";default:return e}}var i=[[{name:"save",desc:"Load machine<br> <small>Save changes and load the machine.</small>"}],[{name:"togglecomment",desc:"Toggle comment"},{name:"indent",desc:"Indent selection"},{name:"outdent",desc:"Unindent selection"}],[{name:"movelinesup",desc:"Move line up"},{name:"movelinesdown",desc:"Move line down"},{name:"duplicateSelection",desc:"Duplicate line/selection"}],[{name:"selectMoreAfter",desc:"Add next occurrence to selection<br> <small>Like a quick “find”. Useful for renaming things.</small>"},{name:"find",desc:"Find"},{name:"replace",desc:"Find and Replace"}]];t.main=function(e,t){var n=function(e){var t=e.platform,n="mac"!==t?o:function(e){return"Alt"===e?"Option":e};return function(r){return e.commands[r].bindKey[t].split("-").map(n)}}(e);return function(e,t){var n=r.select(t).selectAll("tbody").data(e).enter().append("tbody");return n.selectAll("tr").data(o).enter().append("tr").selectAll("td").data(o).enter().append("td").html(o),n}(i.map((function(e){return e.map((function(e){return[(t=n(e.name).map(a),t.map((function(e){return"<kbd>"+e+"</kbd>"})).join("-")),e.desc];var t}))})),t)}}]);
//# sourceMappingURL=main.bundle.js.map