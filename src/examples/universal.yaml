name: Universal TM
source code: "# Универсальная машина Тьюринга эмулирует обыкновенную машину Тьюринга\r\n# путем чтения закодированной таблицы состояний, поиска необходимой интрукции\r\n# и её исполнения\r\n# В данной универсальной машине символы кодируются числом 1 в унарном коде,\r\n# состояния - числом 2, а команды R, L и H - числами 3, 33 и 333\r\n# соответсвенно.\r\n# Если в конце инструкции встречается 3333, то машина останавливается,\r\n# считая, что это состояние - конечное\r\n# Начало каждой ленты отмечено символом '>'.\r\n# На первую ленту подается закодированная таблица инструкций,\r\n# на второй написано начальное состояние,\r\n# на третьей - закодированная входная лента исходной машины.\r\n# На входной ленте символы закодированы как и на первой, а также разделены\r\n# символом ';'\r\n# \r\n# Инструкции обычной машины Тьюринга записываются следующим образом:\r\n#     S1 a -> b S2 R/L/H\r\n# Каждая инструкция кодируется следующим образом:\r\n#   - инструкция записывается в следующем виде:\r\n#         a S1 b S2 R/L/H\r\n#   - если S2 - конечное состояние, то вместо R, L или H записывается 3333\r\n#   - каждый элемент инструкции кодируется унарным кодом как написано выше,\r\n#   - и они записываются подряд без разделителей\r\n# Все закодированные инструкции также пишутся подряд без разделителей\r\n# \r\n# Данная универсальная машина рассматривает нулевой символ, записанный\r\n# одной единицей, как пустой символ - лямбда \r\n#     (при добавлении нового символа в конец рабочей ленты)\r\n# \r\n# \r\n# Для эмуляции каждого такта УМТ делает следующее:\r\n#   - Поиск необходимой инструкции:\r\n#       - Посимвольное сравнение текущего символа и символа в инструкции\r\n#       - Посимвольное сравнение текущего состояние и состояния на 2 ленте\r\n#       - При несовпадении хотя бы одного из этих условий машина переходит\r\n#         к следующей инструкции и начинает поиск заново\r\n#   - Запись символа на рабочую ленту:\r\n#       - При необходимости расширяет или уменьшает текущий символ,\r\n#         сдвигая все символы справа от него.\r\n#         Для этого машина использует вторую ленту чтобы не сдвигать\r\n#         рабочую ленту по одному символу\r\n#   - Запись нового состояния на вторую ленту\r\n#   - Переход по рабочей ленте вправо или влево\r\n#       - При переходе направо добавляет пустой символ в конец если \r\n#         на ленте больше нет символов\r\n#\r\ninput:\r\n  - '>112211223111122111122312212223311222111123333111122211222331222111123333'\r\n  - '>22'\r\n  - '>;11;1111;11;1111;1111;'\r\ntapes: 3\r\nblank: ' '\r\nstart state: start\r\ntable:\r\n  error:\r\n  end:\r\n  start:\r\n    '>>>': 1R 2R 3R   # первый шаг\r\n    '>>;': 1R 2R      # начало очередного цикла\r\n    12;: match 3R     # переход на первую 1 символа и начало поиска\r\n  match: # поиск совпадений по символу\r\n    121: 1R 3R       \r\n    221,12;: skip1 3L # неверный символ\r\n    22;: found1\r\n  skip1: # переход до конца текущей конфигурации,\r\n         # переход на начало 2 ленты и на начало текущего символа\r\n    221: 1R 2L 3L\r\n    121: 1R 2L 3L\r\n    321:    2L 3L\r\n    2>1: 1R    3L\r\n    1>1: 1R    3L\r\n    3>1:       3L\r\n    22;: 1R 2L\r\n    12;: 1R 2L\r\n    32;:    2L\r\n    2>;: 1R\r\n    1>;: 1R\r\n    3>;: skip2\r\n  skip2: # переход на следующую конфигурацию и начало нового поиска\r\n    3>;: 1R\r\n    1>;: match 2R 3R\r\n    \r\n  found1: # совпадение символа, поиск совпадения состояния\r\n    22;:       3L\r\n    221: 1R 2R\r\n    121: skip1     # неверное состояние\r\n    2 1: skip1  2L # неверное состояние\r\n    1 1: found2 2L # верное состояние\r\n  found2: # конфигурация найдена,\r\n          # переход на начало 2 ленты и на начало текущего символа\r\n    121: 2L 3L\r\n    12;: 2L\r\n    1>1:    3L\r\n    1>;: write1 3R\r\n  write1: # запись символа\r\n    1>1: 1R 3R  # посимвольное сравнение\r\n    1>;: extend # увеличение символа\r\n    2>1: shrink # уменьшение символа\r\n    2>;: write2 # символы одинаковые\r\n  write2:\r\n    2>;:    2R 3L # setup\r\n    221: 1R 2R    # посимвольное сравнение состояний\r\n    2 1: 1R 2R2   # увеличить состояние\r\n    321:    2R_   # уменьшить состояние\r\n    3 1: right 1R\r\n    \r\n  right: # движение по выходной ленте\r\n    1 1,  1: goright # '3', движение направо\r\n    3 1: left 1R     # '33'\r\n  left:\r\n    1 1,  1: goleft  # '33', движение налево\r\n    3 1: hold 1R     # '333', недвижение\r\n  hold:\r\n    1 1,  1: gohold  # '333', недвижение\r\n    3 1: end       # '3333', конечное состоние\r\n  goright:\r\n    1 1: 3R        # движение направо до разделителя\r\n    1 ;: append 3R\r\n  append: # добавление '1;' в конец\r\n    '1 1': back 3L     # добавлять не нужно\r\n    '1  ': append2 3R1 # добавляем '1'\r\n  append2:\r\n    '1  ': gohold 3L;  # добавляем ';', идем до предыдущего разделителя\r\n  goleft:\r\n    1 1: 3L        # доходим до текущего разделителя\r\n    1 ;: gohold 3L # и потом до предыдущего\r\n  gohold:\r\n    1 1: 3L    # идем до разделителя\r\n    1 >: error # если после goleft попали на >\r\n    1 ;: back  # дошли\r\n  \r\n    \r\n  back:          # откатываем 1 и 2 ленты назад\r\n    '> ;':    2L\r\n    '  ;': 1L 2L\r\n    '1 ;': 1L 2L\r\n    '2 ;': 1L 2L\r\n    '3 ;': 1L 2L\r\n    '>2;':    2L\r\n    '12;': 1L 2L\r\n    '22;': 1L 2L\r\n    '32;': 1L 2L\r\n    '1>;': 1L\r\n    '2>;': 1L\r\n    '3>;': 1L\r\n    '>>;': start\r\n    \r\n  extend:  # увеличить символ\r\n    1>;:    2R  # в конец 2 ленты\r\n    12;:    2R\r\n    1 ;: 1R 2R  # под единичками которые нужно добавить создаются пустые\r\n    1 1: 1R 2R  # символы\r\n    2 ;:    2R; 3R  # копирование на 2 ленту\r\n    2 1:    2R1 3R\r\n    '1  ': 1R 3R\r\n    '2  ': extb 2L 3L\r\n  extb:  # движение до конца двоек на 2 ленте\r\n    '2  ': 2L 3L\r\n    '211': 2L 3L\r\n    '2;;': 2L 3L\r\n    '2 1': 2L    # сдвиг только 2 ленты на необходимое число символов\r\n    '221': extc 2R 3R\r\n  extc:  # копирование со 2 ленты обратно на 3 и удаление со 2\r\n    '2; ': 2R_ 3R;\r\n    '2;1': 2R_ 3R;\r\n    '2;;': 2R_ 3R;\r\n    '21 ': 2R_ 3R1\r\n    '211': 2R_ 3R1\r\n    '21;': 2R_ 3R1\r\n    '2 1': 2R  3R1\r\n    '2 ;': 2R  3R1\r\n    '2  ': extcb 2L 3L\r\n  extcb:  # возврат к текущему символу на 3 ленте и к началу 2\r\n    2 1: 2L 3L\r\n    2 ;: 2L 3L\r\n    221: 2L 3R\r\n    22;: 2L \r\n    2>1:    3R\r\n    2>;: write2\r\n    \r\n  shrink:  # уменьшить символ\r\n    2>1:     3R2  # пометить 2 единички которые нужно удалить\r\n    2>;: 2R     # переход к концу второй ленты\r\n    22;: 2R\r\n    2 1: 2R1 3R # копирование на 2 ленту\r\n    2 ;: 2R; 3R\r\n    '2  ': shrb 2L 3L\r\n  shrb:  # переход назад\r\n    211: 2L 3L  # переход до первой '2' на 2 ленте\r\n    2;;: 2L 3L\r\n    222: 3L     # пропуск двоек на 3 ленте\r\n    221: shrc 2R 3R\r\n  shrc:  # копирование со 2 ленты обратно на 3 и удаление со 2\r\n    2;1: 2R_ 3R;\r\n    2;2: 2R_ 3R;\r\n    2;;: 2R_ 3R;\r\n    211: 2R_ 3R1\r\n    212: 2R_ 3R1\r\n    21;: 2R_ 3R1\r\n    2 1: 2R  3R_\r\n    2 2: 2R  3R_\r\n    2 ;: 2R  3R_\r\n    '2  ': shrcb 2L 3L\r\n  shrcb:  # возврат к текущему символу на 3 ленте и к началу 2\r\n    '2  ': 2L 3L\r\n    '2 1': 2L 3L\r\n    '2 ;': 2L 3L\r\n    221: 2L 3R\r\n    22;: 2L\r\n    2>1:    3R\r\n    2>;: write2\r\n\r\n\r\nvis:\r\n  error:\r\n    color: FF4040\r\n  start:\r\n    color: 2CA02C\r\n  match:\r\n    color: 2CA02C\r\n    1,3:\r\n      mode: row\r\n      dir: ->\r\n      chars: 1\r\n      color: green\r\n  skip1:\r\n    color: FF7F0E\r\n    1:\r\n      mode: find\r\n      dir: ->\r\n      chars: 3\r\n      color: red\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: '>'\r\n      color: red\r\n    3:\r\n      mode: find\r\n      dir: <-\r\n      chars: ;\r\n      color: red\r\n  skip2:\r\n    color: FF7F0E\r\n    1:\r\n      mode: find\r\n      dir: ->\r\n      chars: 1\r\n      color: red\r\n  found1:\r\n    color: 2CA02C\r\n    1,2:\r\n      mode: row\r\n      dir: ->\r\n      chars: 2\r\n      color: green\r\n  found2:\r\n    color: 2CA02C\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: '>'\r\n      color: blue\r\n    3:\r\n      mode: find\r\n      dir: <-\r\n      chars: ;\r\n      color: blue\r\n  write1:\r\n    color: 17BECF\r\n    1,3:\r\n      mode: row\r\n      dir: ->\r\n      chars: 1\r\n      color: green\r\n  write2:\r\n    color: 17BECF\r\n    1,2:\r\n      mode: row\r\n      dir: ->\r\n      chars: 2\r\n      color: green\r\n  right:\r\n    color: 1F77B4\r\n    1:\r\n      mode: row\r\n      dir: <-\r\n      chars: 3\r\n      color: green\r\n  left:\r\n    color: 1F77B4\r\n    1:\r\n      mode: row\r\n      dir: <-\r\n      chars: 3\r\n      color: green\r\n  hold:\r\n    color: 1F77B4\r\n    1:\r\n      mode: row\r\n      dir: <-\r\n      chars: 3\r\n      color: green\r\n  goright:\r\n    color: 17BECF\r\n    3:\r\n      mode: find\r\n      dir: ->\r\n      chars: ;\r\n      color: blue\r\n  goleft:\r\n    color: 17BECF\r\n    3:\r\n      mode: find\r\n      dir: <-\r\n      chars: ;\r\n      color: blue\r\n      skip: 1\r\n  gohold:\r\n    color: 17BECF\r\n    3:\r\n      mode: find\r\n      dir: <-\r\n      chars: ;\r\n      color: blue\r\n  append:\r\n    color: BCBD22\r\n  append2:\r\n    color: BCBD22\r\n  end:\r\n    color: 7F7F7F\r\n      \r\n  back:\r\n    color: FF7F0E\r\n    1,2:\r\n      mode: find\r\n      dir: <-\r\n      chars: '>'\r\n      color: blue\r\n    \r\n  extend:\r\n    color: 9467BD\r\n    1:\r\n      mode: row\r\n      dir: ->\r\n      chars: 1\r\n      color: red\r\n    3:\r\n      mode: find\r\n      dir: ->\r\n      chars: ' '\r\n      color: red\r\n  extb:\r\n    color: 9467BD\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: 2\r\n      color: blue\r\n  extc:\r\n    color: 9467BD\r\n    2:\r\n      mode: find\r\n      dir: ->\r\n      chars: ' '\r\n      color: red\r\n  extcb:\r\n    color: 9467BD\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: '>'\r\n      color: blue\r\n    \r\n  shrink:\r\n    color: E377C2\r\n    1:\r\n      mode: row\r\n      dir: ->\r\n      chars: 1\r\n      color: red\r\n    3:\r\n      mode: find\r\n      dir: ->\r\n      chars: ' '\r\n      color: red\r\n  shrb:\r\n    color: E377C2\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: 2\r\n      color: blue\r\n  shrc:\r\n    color: E377C2\r\n    3:\r\n      mode: find\r\n      dir: ->\r\n      chars: ' '\r\n      color: red\r\n  shrcb:\r\n    color: E377C2\r\n    2:\r\n      mode: find\r\n      dir: <-\r\n      chars: '>'\r\n      color: blue\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
positions:
  error: {x: 420, y: 34.64}
  end: {x: 500, y: 34.64}
  start: {x: 300, y: 103.92}
  match: {x: 260, y: 173.21}
  skip1: {x: 180, y: 173.21}
  skip2: {x: 220, y: 103.92}
  found1: {x: 220, y: 242.49}
  found2: {x: 260, y: 311.77}
  write1: {x: 300, y: 381.05}
  write2: {x: 620, y: 381.05}
  right: {x: 620, y: 242.49}
  left: {x: 580, y: 173.21}
  hold: {x: 540, y: 103.92}
  goright: {x: 540, y: 242.49}
  append: {x: 460, y: 242.49}
  append2: {x: 420, y: 173.21}
  goleft: {x: 500, y: 173.21}
  gohold: {x: 460, y: 103.92}
  back: {x: 380, y: 103.92}
  extend: {x: 340, y: 450.33}
  extb: {x: 420, y: 450.33}
  extc: {x: 500, y: 450.33}
  extcb: {x: 580, y: 450.33}
  shrink: {x: 340, y: 311.77}
  shrb: {x: 420, y: 311.77}
  shrc: {x: 500, y: 311.77}
  shrcb: {x: 580, y: 311.77}
